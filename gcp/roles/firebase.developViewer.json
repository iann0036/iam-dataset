{
  "description": "Read access to Firebase Develop products and Analytics.",
  "etag": "AA==",
  "includedPermissions": [
    "apikeys.keys.get",
    "apikeys.keys.list",
    "automl.annotationSpecs.get",
    "automl.annotationSpecs.list",
    "automl.annotations.list",
    "automl.columnSpecs.get",
    "automl.columnSpecs.list",
    "automl.datasets.get",
    "automl.datasets.list",
    "automl.examples.get",
    "automl.examples.list",
    "automl.files.list",
    "automl.humanAnnotationTasks.get",
    "automl.humanAnnotationTasks.list",
    "automl.locations.get",
    "automl.locations.list",
    "automl.modelEvaluations.get",
    "automl.modelEvaluations.list",
    "automl.models.get",
    "automl.models.list",
    "automl.operations.get",
    "automl.operations.list",
    "automl.tableSpecs.get",
    "automl.tableSpecs.list",
    "clientauthconfig.brands.get",
    "clientauthconfig.brands.list",
    "cloudasset.assets.searchAllResources",
    "cloudbuild.builds.get",
    "cloudbuild.builds.list",
    "cloudbuild.locations.get",
    "cloudbuild.locations.list",
    "cloudbuild.operations.get",
    "cloudbuild.operations.list",
    "cloudfunctions.functions.get",
    "cloudfunctions.functions.getIamPolicy",
    "cloudfunctions.functions.list",
    "cloudfunctions.locations.list",
    "cloudfunctions.operations.get",
    "cloudfunctions.operations.list",
    "cloudnotifications.activities.list",
    "datastore.backups.get",
    "datastore.backups.list",
    "datastore.databases.get",
    "datastore.databases.getMetadata",
    "datastore.databases.list",
    "datastore.entities.get",
    "datastore.entities.list",
    "datastore.indexes.get",
    "datastore.indexes.list",
    "datastore.namespaces.get",
    "datastore.namespaces.list",
    "datastore.statistics.get",
    "datastore.statistics.list",
    "errorreporting.groups.list",
    "eventarc.channelConnections.get",
    "eventarc.channelConnections.getIamPolicy",
    "eventarc.channelConnections.list",
    "eventarc.channels.get",
    "eventarc.channels.getIamPolicy",
    "eventarc.channels.list",
    "eventarc.enrollments.get",
    "eventarc.enrollments.getIamPolicy",
    "eventarc.enrollments.list",
    "eventarc.googleApiSources.get",
    "eventarc.googleApiSources.getIamPolicy",
    "eventarc.googleApiSources.list",
    "eventarc.googleChannelConfigs.get",
    "eventarc.kafkaSources.get",
    "eventarc.kafkaSources.getIamPolicy",
    "eventarc.kafkaSources.list",
    "eventarc.locations.get",
    "eventarc.locations.list",
    "eventarc.messageBuses.get",
    "eventarc.messageBuses.getIamPolicy",
    "eventarc.messageBuses.list",
    "eventarc.messageBuses.use",
    "eventarc.multiProjectSources.collectGoogleApiEvents",
    "eventarc.operations.get",
    "eventarc.operations.list",
    "eventarc.pipelines.get",
    "eventarc.pipelines.getIamPolicy",
    "eventarc.pipelines.list",
    "eventarc.providers.get",
    "eventarc.providers.list",
    "eventarc.triggers.get",
    "eventarc.triggers.getIamPolicy",
    "eventarc.triggers.list",
    "firebase.billingPlans.get",
    "firebase.clients.get",
    "firebase.clients.list",
    "firebase.links.list",
    "firebase.playLinks.get",
    "firebase.playLinks.list",
    "firebase.projects.get",
    "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
    "firebaseappcheck.appAttestConfig.get",
    "firebaseappcheck.automations.get",
    "firebaseappcheck.automations.list",
    "firebaseappcheck.debugTokens.get",
    "firebaseappcheck.deviceCheckConfig.get",
    "firebaseappcheck.playIntegrityConfig.get",
    "firebaseappcheck.recaptchaEnterpriseConfig.get",
    "firebaseappcheck.recaptchaV3Config.get",
    "firebaseappcheck.resourcePolicies.get",
    "firebaseappcheck.safetyNetConfig.get",
    "firebaseappcheck.services.get",
    "firebaseapphosting.backends.get",
    "firebaseapphosting.backends.list",
    "firebaseapphosting.builds.get",
    "firebaseapphosting.builds.list",
    "firebaseapphosting.domains.get",
    "firebaseapphosting.domains.list",
    "firebaseapphosting.locations.get",
    "firebaseapphosting.locations.list",
    "firebaseapphosting.operations.get",
    "firebaseapphosting.operations.list",
    "firebaseapphosting.rollouts.get",
    "firebaseapphosting.rollouts.list",
    "firebaseapphosting.traffic.get",
    "firebaseauth.configs.get",
    "firebaseauth.users.get",
    "firebasedatabase.instances.get",
    "firebasedatabase.instances.list",
    "firebasedataconnect.connectorRevisions.get",
    "firebasedataconnect.connectorRevisions.list",
    "firebasedataconnect.connectors.get",
    "firebasedataconnect.connectors.list",
    "firebasedataconnect.locations.get",
    "firebasedataconnect.locations.list",
    "firebasedataconnect.operations.get",
    "firebasedataconnect.operations.list",
    "firebasedataconnect.schemaRevisions.get",
    "firebasedataconnect.schemaRevisions.list",
    "firebasedataconnect.schemas.get",
    "firebasedataconnect.schemas.list",
    "firebasedataconnect.services.get",
    "firebasedataconnect.services.introspectGraphql",
    "firebasedataconnect.services.list",
    "firebaseextensions.configs.list",
    "firebasehosting.sites.get",
    "firebasehosting.sites.list",
    "firebaseml.models.get",
    "firebaseml.models.list",
    "firebaseml.modelversions.get",
    "firebaseml.modelversions.list",
    "firebaserules.releases.get",
    "firebaserules.releases.list",
    "firebaserules.rulesets.get",
    "firebaserules.rulesets.list",
    "firebasestorage.buckets.get",
    "firebasestorage.buckets.list",
    "firebasestorage.defaultBucket.get",
    "firebasevertexai.configs.get",
    "logging.logEntries.list",
    "monitoring.timeSeries.list",
    "oauthconfig.verification.get",
    "recommender.cloudFunctionsPerformanceInsights.get",
    "recommender.cloudFunctionsPerformanceInsights.list",
    "recommender.cloudFunctionsPerformanceRecommendations.get",
    "recommender.cloudFunctionsPerformanceRecommendations.list",
    "recommender.locations.get",
    "recommender.locations.list",
    "recommender.runServiceCostInsights.get",
    "recommender.runServiceCostInsights.list",
    "recommender.runServiceCostRecommendations.get",
    "recommender.runServiceCostRecommendations.list",
    "recommender.runServiceIdentityInsights.get",
    "recommender.runServiceIdentityInsights.list",
    "recommender.runServiceIdentityRecommendations.get",
    "recommender.runServiceIdentityRecommendations.list",
    "recommender.runServicePerformanceInsights.get",
    "recommender.runServicePerformanceInsights.list",
    "recommender.runServicePerformanceRecommendations.get",
    "recommender.runServicePerformanceRecommendations.list",
    "recommender.runServiceSecurityInsights.get",
    "recommender.runServiceSecurityInsights.list",
    "recommender.runServiceSecurityRecommendations.get",
    "recommender.runServiceSecurityRecommendations.list",
    "remotebuildexecution.blobs.get",
    "resourcemanager.projects.get",
    "resourcemanager.projects.getIamPolicy",
    "resourcemanager.projects.list",
    "run.configurations.get",
    "run.configurations.list",
    "run.executions.get",
    "run.executions.list",
    "run.jobs.get",
    "run.jobs.getIamPolicy",
    "run.jobs.list",
    "run.jobs.listEffectiveTags",
    "run.jobs.listTagBindings",
    "run.locations.list",
    "run.operations.get",
    "run.operations.list",
    "run.revisions.get",
    "run.revisions.list",
    "run.routes.get",
    "run.routes.list",
    "run.services.get",
    "run.services.getIamPolicy",
    "run.services.list",
    "run.services.listEffectiveTags",
    "run.services.listTagBindings",
    "run.tasks.get",
    "run.tasks.list",
    "run.workerpools.get",
    "run.workerpools.getIamPolicy",
    "run.workerpools.list",
    "serviceusage.operations.get",
    "serviceusage.quotas.get",
    "serviceusage.services.get",
    "serviceusage.services.list",
    "storage.buckets.get",
    "storage.buckets.getIamPolicy",
    "storage.buckets.list",
    "storage.objects.get",
    "storage.objects.getIamPolicy",
    "storage.objects.list"
  ],
  "name": "roles/firebase.developViewer",
  "stage": "GA",
  "title": "Firebase Develop Viewer"
}
