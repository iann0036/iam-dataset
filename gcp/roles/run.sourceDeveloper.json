{
  "description": "Deploy and manage Cloud Run source deployed resources.",
  "etag": "AA==",
  "includedPermissions": [
    "artifactregistry.attachments.get",
    "artifactregistry.attachments.list",
    "artifactregistry.dockerimages.get",
    "artifactregistry.dockerimages.list",
    "artifactregistry.files.download",
    "artifactregistry.files.get",
    "artifactregistry.files.list",
    "artifactregistry.locations.get",
    "artifactregistry.locations.list",
    "artifactregistry.mavenartifacts.get",
    "artifactregistry.mavenartifacts.list",
    "artifactregistry.npmpackages.get",
    "artifactregistry.npmpackages.list",
    "artifactregistry.packages.get",
    "artifactregistry.packages.list",
    "artifactregistry.projectsettings.get",
    "artifactregistry.pythonpackages.get",
    "artifactregistry.pythonpackages.list",
    "artifactregistry.repositories.create",
    "artifactregistry.repositories.downloadArtifacts",
    "artifactregistry.repositories.get",
    "artifactregistry.repositories.list",
    "artifactregistry.repositories.listEffectiveTags",
    "artifactregistry.repositories.listTagBindings",
    "artifactregistry.repositories.readViaVirtualRepository",
    "artifactregistry.rules.get",
    "artifactregistry.rules.list",
    "artifactregistry.tags.get",
    "artifactregistry.tags.list",
    "artifactregistry.versions.get",
    "artifactregistry.versions.list",
    "cloudbuild.builds.create",
    "cloudbuild.builds.get",
    "cloudbuild.builds.list",
    "cloudbuild.builds.update",
    "cloudbuild.locations.get",
    "cloudbuild.locations.list",
    "cloudbuild.operations.get",
    "cloudbuild.operations.list",
    "eventarc.channelConnections.create",
    "eventarc.channelConnections.delete",
    "eventarc.channelConnections.get",
    "eventarc.channelConnections.getIamPolicy",
    "eventarc.channelConnections.list",
    "eventarc.channelConnections.publish",
    "eventarc.channels.attach",
    "eventarc.channels.create",
    "eventarc.channels.delete",
    "eventarc.channels.get",
    "eventarc.channels.getIamPolicy",
    "eventarc.channels.list",
    "eventarc.channels.publish",
    "eventarc.channels.undelete",
    "eventarc.channels.update",
    "eventarc.enrollments.create",
    "eventarc.enrollments.delete",
    "eventarc.enrollments.get",
    "eventarc.enrollments.getIamPolicy",
    "eventarc.enrollments.list",
    "eventarc.enrollments.update",
    "eventarc.googleApiSources.create",
    "eventarc.googleApiSources.delete",
    "eventarc.googleApiSources.get",
    "eventarc.googleApiSources.getIamPolicy",
    "eventarc.googleApiSources.list",
    "eventarc.googleApiSources.update",
    "eventarc.googleChannelConfigs.get",
    "eventarc.googleChannelConfigs.update",
    "eventarc.kafkaSources.create",
    "eventarc.kafkaSources.delete",
    "eventarc.kafkaSources.get",
    "eventarc.kafkaSources.getIamPolicy",
    "eventarc.kafkaSources.list",
    "eventarc.locations.get",
    "eventarc.locations.list",
    "eventarc.operations.cancel",
    "eventarc.operations.delete",
    "eventarc.operations.get",
    "eventarc.operations.list",
    "eventarc.pipelines.create",
    "eventarc.pipelines.delete",
    "eventarc.pipelines.get",
    "eventarc.pipelines.getIamPolicy",
    "eventarc.pipelines.list",
    "eventarc.pipelines.update",
    "eventarc.providers.get",
    "eventarc.providers.list",
    "eventarc.triggers.create",
    "eventarc.triggers.delete",
    "eventarc.triggers.get",
    "eventarc.triggers.getIamPolicy",
    "eventarc.triggers.list",
    "eventarc.triggers.undelete",
    "eventarc.triggers.update",
    "orgpolicy.policy.get",
    "pubsub.messageTransforms.validate",
    "pubsub.schemas.attach",
    "pubsub.schemas.commit",
    "pubsub.schemas.create",
    "pubsub.schemas.delete",
    "pubsub.schemas.get",
    "pubsub.schemas.list",
    "pubsub.schemas.listRevisions",
    "pubsub.schemas.rollback",
    "pubsub.schemas.validate",
    "pubsub.snapshots.create",
    "pubsub.snapshots.createTagBinding",
    "pubsub.snapshots.delete",
    "pubsub.snapshots.deleteTagBinding",
    "pubsub.snapshots.get",
    "pubsub.snapshots.list",
    "pubsub.snapshots.listEffectiveTags",
    "pubsub.snapshots.listTagBindings",
    "pubsub.snapshots.seek",
    "pubsub.snapshots.update",
    "pubsub.subscriptions.consume",
    "pubsub.subscriptions.create",
    "pubsub.subscriptions.createTagBinding",
    "pubsub.subscriptions.delete",
    "pubsub.subscriptions.deleteTagBinding",
    "pubsub.subscriptions.get",
    "pubsub.subscriptions.list",
    "pubsub.subscriptions.listEffectiveTags",
    "pubsub.subscriptions.listTagBindings",
    "pubsub.subscriptions.update",
    "pubsub.topics.attachSubscription",
    "pubsub.topics.create",
    "pubsub.topics.createTagBinding",
    "pubsub.topics.delete",
    "pubsub.topics.deleteTagBinding",
    "pubsub.topics.detachSubscription",
    "pubsub.topics.get",
    "pubsub.topics.list",
    "pubsub.topics.listEffectiveTags",
    "pubsub.topics.listTagBindings",
    "pubsub.topics.publish",
    "pubsub.topics.update",
    "pubsub.topics.updateTag",
    "recommender.locations.get",
    "recommender.locations.list",
    "recommender.runServiceCostInsights.get",
    "recommender.runServiceCostInsights.list",
    "recommender.runServiceCostInsights.update",
    "recommender.runServiceCostRecommendations.get",
    "recommender.runServiceCostRecommendations.list",
    "recommender.runServiceCostRecommendations.update",
    "recommender.runServiceIdentityInsights.get",
    "recommender.runServiceIdentityInsights.list",
    "recommender.runServiceIdentityInsights.update",
    "recommender.runServiceIdentityRecommendations.get",
    "recommender.runServiceIdentityRecommendations.list",
    "recommender.runServiceIdentityRecommendations.update",
    "recommender.runServicePerformanceInsights.get",
    "recommender.runServicePerformanceInsights.list",
    "recommender.runServicePerformanceInsights.update",
    "recommender.runServicePerformanceRecommendations.get",
    "recommender.runServicePerformanceRecommendations.list",
    "recommender.runServicePerformanceRecommendations.update",
    "recommender.runServiceSecurityInsights.get",
    "recommender.runServiceSecurityInsights.list",
    "recommender.runServiceSecurityInsights.update",
    "recommender.runServiceSecurityRecommendations.get",
    "recommender.runServiceSecurityRecommendations.list",
    "recommender.runServiceSecurityRecommendations.update",
    "remotebuildexecution.blobs.get",
    "resourcemanager.projects.get",
    "resourcemanager.projects.list",
    "run.configurations.get",
    "run.configurations.list",
    "run.executions.cancel",
    "run.executions.delete",
    "run.executions.get",
    "run.executions.list",
    "run.jobs.create",
    "run.jobs.delete",
    "run.jobs.get",
    "run.jobs.getIamPolicy",
    "run.jobs.list",
    "run.jobs.listEffectiveTags",
    "run.jobs.listTagBindings",
    "run.jobs.run",
    "run.jobs.runWithOverrides",
    "run.jobs.update",
    "run.locations.list",
    "run.operations.delete",
    "run.operations.get",
    "run.operations.list",
    "run.revisions.delete",
    "run.revisions.get",
    "run.revisions.list",
    "run.routes.get",
    "run.routes.invoke",
    "run.routes.list",
    "run.services.create",
    "run.services.delete",
    "run.services.get",
    "run.services.getIamPolicy",
    "run.services.list",
    "run.services.listEffectiveTags",
    "run.services.listTagBindings",
    "run.services.update",
    "run.tasks.get",
    "run.tasks.list",
    "run.workerpools.create",
    "run.workerpools.delete",
    "run.workerpools.get",
    "run.workerpools.getIamPolicy",
    "run.workerpools.list",
    "run.workerpools.update",
    "serviceusage.consumerpolicy.analyze",
    "serviceusage.consumerpolicy.get",
    "serviceusage.effectivepolicy.get",
    "serviceusage.groups.list",
    "serviceusage.groups.listExpandedMembers",
    "serviceusage.groups.listMembers",
    "serviceusage.quotas.get",
    "serviceusage.services.get",
    "serviceusage.services.list",
    "serviceusage.services.use",
    "serviceusage.values.test",
    "storage.buckets.create",
    "storage.buckets.get",
    "storage.buckets.list",
    "storage.folders.create",
    "storage.folders.get",
    "storage.folders.list",
    "storage.managedFolders.create",
    "storage.managedFolders.get",
    "storage.managedFolders.list",
    "storage.multipartUploads.abort",
    "storage.multipartUploads.create",
    "storage.multipartUploads.listParts",
    "storage.objects.create",
    "storage.objects.get",
    "storage.objects.list"
  ],
  "name": "roles/run.sourceDeveloper",
  "stage": "GA",
  "title": "Cloud Run Source Developer"
}
