{
  "description": "View Cloud Run source deployed resources.",
  "etag": "AA==",
  "includedPermissions": [
    "artifactregistry.repositories.get",
    "artifactregistry.repositories.list",
    "cloudbuild.builds.get",
    "cloudbuild.builds.list",
    "cloudbuild.locations.get",
    "cloudbuild.locations.list",
    "cloudbuild.operations.get",
    "cloudbuild.operations.list",
    "eventarc.channelConnections.get",
    "eventarc.channelConnections.getIamPolicy",
    "eventarc.channelConnections.list",
    "eventarc.channels.get",
    "eventarc.channels.getIamPolicy",
    "eventarc.channels.list",
    "eventarc.enrollments.get",
    "eventarc.enrollments.getIamPolicy",
    "eventarc.enrollments.list",
    "eventarc.googleApiSources.get",
    "eventarc.googleApiSources.getIamPolicy",
    "eventarc.googleApiSources.list",
    "eventarc.googleChannelConfigs.get",
    "eventarc.kafkaSources.get",
    "eventarc.kafkaSources.getIamPolicy",
    "eventarc.kafkaSources.list",
    "eventarc.locations.get",
    "eventarc.locations.list",
    "eventarc.messageBuses.get",
    "eventarc.messageBuses.getIamPolicy",
    "eventarc.messageBuses.list",
    "eventarc.messageBuses.use",
    "eventarc.multiProjectSources.collectGoogleApiEvents",
    "eventarc.operations.get",
    "eventarc.operations.list",
    "eventarc.pipelines.get",
    "eventarc.pipelines.getIamPolicy",
    "eventarc.pipelines.list",
    "eventarc.providers.get",
    "eventarc.providers.list",
    "eventarc.triggers.get",
    "eventarc.triggers.getIamPolicy",
    "eventarc.triggers.list",
    "pubsub.messageTransforms.validate",
    "pubsub.schemas.get",
    "pubsub.schemas.list",
    "pubsub.schemas.listRevisions",
    "pubsub.schemas.validate",
    "pubsub.snapshots.get",
    "pubsub.snapshots.list",
    "pubsub.snapshots.listEffectiveTags",
    "pubsub.snapshots.listTagBindings",
    "pubsub.subscriptions.get",
    "pubsub.subscriptions.list",
    "pubsub.subscriptions.listEffectiveTags",
    "pubsub.subscriptions.listTagBindings",
    "pubsub.topics.get",
    "pubsub.topics.list",
    "pubsub.topics.listEffectiveTags",
    "pubsub.topics.listTagBindings",
    "recommender.locations.get",
    "recommender.locations.list",
    "recommender.runServiceCostInsights.get",
    "recommender.runServiceCostInsights.list",
    "recommender.runServiceCostRecommendations.get",
    "recommender.runServiceCostRecommendations.list",
    "recommender.runServiceIdentityInsights.get",
    "recommender.runServiceIdentityInsights.list",
    "recommender.runServiceIdentityRecommendations.get",
    "recommender.runServiceIdentityRecommendations.list",
    "recommender.runServicePerformanceInsights.get",
    "recommender.runServicePerformanceInsights.list",
    "recommender.runServicePerformanceRecommendations.get",
    "recommender.runServicePerformanceRecommendations.list",
    "recommender.runServiceSecurityInsights.get",
    "recommender.runServiceSecurityInsights.list",
    "recommender.runServiceSecurityRecommendations.get",
    "recommender.runServiceSecurityRecommendations.list",
    "remotebuildexecution.blobs.get",
    "resourcemanager.projects.get",
    "resourcemanager.projects.list",
    "run.configurations.get",
    "run.configurations.list",
    "run.executions.get",
    "run.executions.list",
    "run.jobs.get",
    "run.jobs.getIamPolicy",
    "run.jobs.list",
    "run.jobs.listEffectiveTags",
    "run.jobs.listTagBindings",
    "run.locations.list",
    "run.operations.get",
    "run.operations.list",
    "run.revisions.get",
    "run.revisions.list",
    "run.routes.get",
    "run.routes.list",
    "run.services.get",
    "run.services.getIamPolicy",
    "run.services.list",
    "run.services.listEffectiveTags",
    "run.services.listTagBindings",
    "run.tasks.get",
    "run.tasks.list",
    "run.workerpools.get",
    "run.workerpools.getIamPolicy",
    "run.workerpools.list",
    "serviceusage.quotas.get",
    "serviceusage.services.get",
    "serviceusage.services.list",
    "storage.folders.get",
    "storage.folders.list",
    "storage.managedFolders.get",
    "storage.managedFolders.list",
    "storage.objects.get",
    "storage.objects.list"
  ],
  "name": "roles/run.sourceViewer",
  "stage": "GA",
  "title": "Cloud Run Source Viewer"
}
