{
  "description": "Enables DevOps users to build and deploy applications, create, manage and perform administrative tasks on associated GCP resources",
  "etag": "AA==",
  "includedPermissions": [
    "artifactregistry.aptartifacts.create",
    "artifactregistry.attachments.create",
    "artifactregistry.attachments.get",
    "artifactregistry.attachments.list",
    "artifactregistry.dockerimages.get",
    "artifactregistry.dockerimages.list",
    "artifactregistry.files.download",
    "artifactregistry.files.get",
    "artifactregistry.files.list",
    "artifactregistry.files.update",
    "artifactregistry.files.upload",
    "artifactregistry.kfpartifacts.create",
    "artifactregistry.locations.get",
    "artifactregistry.locations.list",
    "artifactregistry.mavenartifacts.get",
    "artifactregistry.mavenartifacts.list",
    "artifactregistry.npmpackages.get",
    "artifactregistry.npmpackages.list",
    "artifactregistry.packages.get",
    "artifactregistry.packages.list",
    "artifactregistry.packages.update",
    "artifactregistry.projectsettings.get",
    "artifactregistry.pythonpackages.get",
    "artifactregistry.pythonpackages.list",
    "artifactregistry.repositories.downloadArtifacts",
    "artifactregistry.repositories.get",
    "artifactregistry.repositories.list",
    "artifactregistry.repositories.listEffectiveTags",
    "artifactregistry.repositories.listTagBindings",
    "artifactregistry.repositories.readViaVirtualRepository",
    "artifactregistry.repositories.uploadArtifacts",
    "artifactregistry.rules.get",
    "artifactregistry.rules.list",
    "artifactregistry.tags.create",
    "artifactregistry.tags.get",
    "artifactregistry.tags.list",
    "artifactregistry.tags.update",
    "artifactregistry.versions.get",
    "artifactregistry.versions.list",
    "artifactregistry.yumartifacts.create",
    "binaryauthorization.continuousValidationConfig.get",
    "binaryauthorization.continuousValidationConfig.getIamPolicy",
    "binaryauthorization.continuousValidationConfig.setIamPolicy",
    "binaryauthorization.continuousValidationConfig.update",
    "binaryauthorization.platformPolicies.create",
    "binaryauthorization.platformPolicies.delete",
    "binaryauthorization.platformPolicies.evaluatePolicy",
    "binaryauthorization.platformPolicies.get",
    "binaryauthorization.platformPolicies.list",
    "binaryauthorization.platformPolicies.replace",
    "binaryauthorization.policy.evaluatePolicy",
    "binaryauthorization.policy.get",
    "binaryauthorization.policy.getIamPolicy",
    "binaryauthorization.policy.setIamPolicy",
    "binaryauthorization.policy.update",
    "cloudaicompanion.entitlements.get",
    "cloudasset.assets.searchAllResources",
    "cloudbuild.builds.create",
    "cloudbuild.builds.get",
    "cloudbuild.builds.list",
    "cloudbuild.builds.update",
    "cloudbuild.connections.create",
    "cloudbuild.connections.delete",
    "cloudbuild.connections.fetchLinkableRepositories",
    "cloudbuild.connections.get",
    "cloudbuild.connections.getIamPolicy",
    "cloudbuild.connections.list",
    "cloudbuild.connections.setIamPolicy",
    "cloudbuild.connections.update",
    "cloudbuild.integrations.create",
    "cloudbuild.integrations.delete",
    "cloudbuild.integrations.get",
    "cloudbuild.integrations.list",
    "cloudbuild.integrations.update",
    "cloudbuild.locations.get",
    "cloudbuild.locations.list",
    "cloudbuild.operations.get",
    "cloudbuild.operations.list",
    "cloudbuild.repositories.create",
    "cloudbuild.repositories.delete",
    "cloudbuild.repositories.fetchGitRefs",
    "cloudbuild.repositories.get",
    "cloudbuild.repositories.list",
    "cloudbuild.workerpools.create",
    "cloudbuild.workerpools.delete",
    "cloudbuild.workerpools.get",
    "cloudbuild.workerpools.list",
    "cloudbuild.workerpools.update",
    "clouddeploy.automationRuns.get",
    "clouddeploy.automationRuns.list",
    "clouddeploy.automations.get",
    "clouddeploy.automations.list",
    "clouddeploy.config.get",
    "clouddeploy.deliveryPipelines.create",
    "clouddeploy.deliveryPipelines.createTagBinding",
    "clouddeploy.deliveryPipelines.delete",
    "clouddeploy.deliveryPipelines.deleteTagBinding",
    "clouddeploy.deliveryPipelines.get",
    "clouddeploy.deliveryPipelines.getIamPolicy",
    "clouddeploy.deliveryPipelines.list",
    "clouddeploy.deliveryPipelines.listEffectiveTags",
    "clouddeploy.deliveryPipelines.listTagBindings",
    "clouddeploy.deliveryPipelines.update",
    "clouddeploy.deployPolicies.get",
    "clouddeploy.deployPolicies.list",
    "clouddeploy.jobRuns.get",
    "clouddeploy.jobRuns.list",
    "clouddeploy.locations.get",
    "clouddeploy.locations.list",
    "clouddeploy.operations.cancel",
    "clouddeploy.operations.delete",
    "clouddeploy.operations.get",
    "clouddeploy.operations.list",
    "clouddeploy.releases.abandon",
    "clouddeploy.releases.create",
    "clouddeploy.releases.get",
    "clouddeploy.releases.list",
    "clouddeploy.rollouts.get",
    "clouddeploy.rollouts.list",
    "cloudfunctions.functions.call",
    "cloudfunctions.functions.create",
    "cloudfunctions.functions.delete",
    "cloudfunctions.functions.generationUpgrade",
    "cloudfunctions.functions.get",
    "cloudfunctions.functions.invoke",
    "cloudfunctions.functions.list",
    "cloudfunctions.functions.sourceCodeGet",
    "cloudfunctions.functions.sourceCodeSet",
    "cloudfunctions.functions.update",
    "cloudfunctions.locations.list",
    "cloudfunctions.operations.get",
    "cloudfunctions.operations.list",
    "cloudkms.cryptoKeyVersions.useToDecrypt",
    "cloudkms.cryptoKeyVersions.useToEncrypt",
    "cloudkms.locations.get",
    "cloudkms.locations.list",
    "cloudnotifications.activities.list",
    "cloudsql.backupRuns.create",
    "cloudsql.backupRuns.export",
    "cloudsql.backupRuns.get",
    "cloudsql.backupRuns.list",
    "cloudsql.backupRuns.update",
    "cloudsql.databases.create",
    "cloudsql.databases.get",
    "cloudsql.databases.list",
    "cloudsql.databases.update",
    "cloudsql.instances.addServerCa",
    "cloudsql.instances.addServerCertificate",
    "cloudsql.instances.connect",
    "cloudsql.instances.export",
    "cloudsql.instances.failover",
    "cloudsql.instances.get",
    "cloudsql.instances.getDiskShrinkConfig",
    "cloudsql.instances.list",
    "cloudsql.instances.listEffectiveTags",
    "cloudsql.instances.listServerCas",
    "cloudsql.instances.listServerCertificates",
    "cloudsql.instances.listTagBindings",
    "cloudsql.instances.migrate",
    "cloudsql.instances.performDiskShrink",
    "cloudsql.instances.reencrypt",
    "cloudsql.instances.resetReplicaSize",
    "cloudsql.instances.restart",
    "cloudsql.instances.rotateServerCa",
    "cloudsql.instances.rotateServerCertificate",
    "cloudsql.instances.truncateLog",
    "cloudsql.instances.update",
    "cloudsql.schemas.view",
    "cloudsql.sslCerts.get",
    "cloudsql.sslCerts.list",
    "cloudsql.users.get",
    "cloudsql.users.list",
    "compute.disks.listEffectiveTags",
    "compute.disks.listTagBindings",
    "compute.firewalls.create",
    "compute.firewalls.get",
    "compute.firewalls.list",
    "compute.images.listEffectiveTags",
    "compute.images.listTagBindings",
    "compute.instanceSettings.get",
    "compute.instances.get",
    "compute.instances.list",
    "compute.instances.listEffectiveTags",
    "compute.instances.listTagBindings",
    "compute.instances.osAdminLogin",
    "compute.instances.osLogin",
    "compute.instances.start",
    "compute.instances.stop",
    "compute.networks.get",
    "compute.networks.updatePolicy",
    "compute.projects.get",
    "compute.regions.get",
    "compute.snapshots.listEffectiveTags",
    "compute.snapshots.listTagBindings",
    "compute.subnetworks.get",
    "compute.subnetworks.list",
    "developerconnect.connections.constructGitHubAppManifest",
    "developerconnect.connections.create",
    "developerconnect.connections.delete",
    "developerconnect.connections.fetchGitHubInstallations",
    "developerconnect.connections.fetchLinkableGitRepositories",
    "developerconnect.connections.generateGitHubStateToken",
    "developerconnect.connections.get",
    "developerconnect.connections.list",
    "developerconnect.connections.processGitHubAppCreationCallback",
    "developerconnect.connections.processGitHubOAuthCallback",
    "developerconnect.connections.update",
    "developerconnect.gitRepositoryLinks.create",
    "developerconnect.gitRepositoryLinks.delete",
    "developerconnect.gitRepositoryLinks.fetchGitRefs",
    "developerconnect.gitRepositoryLinks.get",
    "developerconnect.gitRepositoryLinks.gitProxyRead",
    "developerconnect.gitRepositoryLinks.gitProxyWrite",
    "developerconnect.gitRepositoryLinks.list",
    "developerconnect.locations.get",
    "developerconnect.locations.list",
    "developerconnect.operations.cancel",
    "developerconnect.operations.delete",
    "developerconnect.operations.get",
    "developerconnect.operations.list",
    "eventarc.channelConnections.create",
    "eventarc.channelConnections.delete",
    "eventarc.channelConnections.get",
    "eventarc.channelConnections.getIamPolicy",
    "eventarc.channelConnections.list",
    "eventarc.channelConnections.publish",
    "eventarc.channels.attach",
    "eventarc.channels.create",
    "eventarc.channels.delete",
    "eventarc.channels.get",
    "eventarc.channels.getIamPolicy",
    "eventarc.channels.list",
    "eventarc.channels.publish",
    "eventarc.channels.undelete",
    "eventarc.channels.update",
    "eventarc.enrollments.create",
    "eventarc.enrollments.delete",
    "eventarc.enrollments.get",
    "eventarc.enrollments.getIamPolicy",
    "eventarc.enrollments.list",
    "eventarc.enrollments.update",
    "eventarc.googleApiSources.create",
    "eventarc.googleApiSources.delete",
    "eventarc.googleApiSources.get",
    "eventarc.googleApiSources.getIamPolicy",
    "eventarc.googleApiSources.list",
    "eventarc.googleApiSources.update",
    "eventarc.googleChannelConfigs.get",
    "eventarc.googleChannelConfigs.update",
    "eventarc.kafkaSources.create",
    "eventarc.kafkaSources.delete",
    "eventarc.kafkaSources.get",
    "eventarc.kafkaSources.getIamPolicy",
    "eventarc.kafkaSources.list",
    "eventarc.locations.get",
    "eventarc.locations.list",
    "eventarc.operations.cancel",
    "eventarc.operations.delete",
    "eventarc.operations.get",
    "eventarc.operations.list",
    "eventarc.pipelines.create",
    "eventarc.pipelines.delete",
    "eventarc.pipelines.get",
    "eventarc.pipelines.getIamPolicy",
    "eventarc.pipelines.list",
    "eventarc.pipelines.update",
    "eventarc.providers.get",
    "eventarc.providers.list",
    "eventarc.triggers.create",
    "eventarc.triggers.delete",
    "eventarc.triggers.get",
    "eventarc.triggers.getIamPolicy",
    "eventarc.triggers.list",
    "eventarc.triggers.undelete",
    "eventarc.triggers.update",
    "iam.serviceAccountApiKeyBindings.create",
    "iam.serviceAccountApiKeyBindings.delete",
    "iam.serviceAccountApiKeyBindings.undelete",
    "iam.serviceAccounts.actAs",
    "iam.serviceAccounts.create",
    "iam.serviceAccounts.createTagBinding",
    "iam.serviceAccounts.delete",
    "iam.serviceAccounts.deleteTagBinding",
    "iam.serviceAccounts.disable",
    "iam.serviceAccounts.enable",
    "iam.serviceAccounts.get",
    "iam.serviceAccounts.getIamPolicy",
    "iam.serviceAccounts.list",
    "iam.serviceAccounts.listEffectiveTags",
    "iam.serviceAccounts.listTagBindings",
    "iam.serviceAccounts.setIamPolicy",
    "iam.serviceAccounts.undelete",
    "iam.serviceAccounts.update",
    "logging.buckets.copyLogEntries",
    "logging.buckets.create",
    "logging.buckets.createTagBinding",
    "logging.buckets.delete",
    "logging.buckets.deleteTagBinding",
    "logging.buckets.get",
    "logging.buckets.list",
    "logging.buckets.listEffectiveTags",
    "logging.buckets.listTagBindings",
    "logging.buckets.undelete",
    "logging.buckets.update",
    "logging.exclusions.create",
    "logging.exclusions.delete",
    "logging.exclusions.get",
    "logging.exclusions.list",
    "logging.exclusions.update",
    "logging.fields.access",
    "logging.links.create",
    "logging.links.delete",
    "logging.links.get",
    "logging.links.list",
    "logging.locations.get",
    "logging.locations.list",
    "logging.logEntries.create",
    "logging.logEntries.download",
    "logging.logEntries.list",
    "logging.logEntries.route",
    "logging.logMetrics.create",
    "logging.logMetrics.delete",
    "logging.logMetrics.get",
    "logging.logMetrics.list",
    "logging.logMetrics.update",
    "logging.logScopes.create",
    "logging.logScopes.delete",
    "logging.logScopes.get",
    "logging.logScopes.list",
    "logging.logScopes.update",
    "logging.logServiceIndexes.list",
    "logging.logServices.list",
    "logging.logs.delete",
    "logging.logs.list",
    "logging.notificationRules.create",
    "logging.notificationRules.delete",
    "logging.notificationRules.get",
    "logging.notificationRules.list",
    "logging.notificationRules.update",
    "logging.operations.cancel",
    "logging.operations.get",
    "logging.operations.list",
    "logging.privateLogEntries.list",
    "logging.queries.deleteShared",
    "logging.queries.getShared",
    "logging.queries.listShared",
    "logging.queries.share",
    "logging.queries.updateShared",
    "logging.queries.usePrivate",
    "logging.settings.get",
    "logging.settings.update",
    "logging.sinks.create",
    "logging.sinks.delete",
    "logging.sinks.get",
    "logging.sinks.list",
    "logging.sinks.update",
    "logging.sqlAlerts.create",
    "logging.sqlAlerts.update",
    "logging.usage.get",
    "logging.views.access",
    "logging.views.create",
    "logging.views.delete",
    "logging.views.get",
    "logging.views.getIamPolicy",
    "logging.views.list",
    "logging.views.listLogs",
    "logging.views.listResourceKeys",
    "logging.views.listResourceValues",
    "logging.views.setIamPolicy",
    "logging.views.update",
    "monitoring.alertPolicies.create",
    "monitoring.alertPolicies.createTagBinding",
    "monitoring.alertPolicies.delete",
    "monitoring.alertPolicies.deleteTagBinding",
    "monitoring.alertPolicies.get",
    "monitoring.alertPolicies.list",
    "monitoring.alertPolicies.listEffectiveTags",
    "monitoring.alertPolicies.listTagBindings",
    "monitoring.alertPolicies.update",
    "monitoring.dashboards.create",
    "monitoring.dashboards.createTagBinding",
    "monitoring.dashboards.delete",
    "monitoring.dashboards.deleteTagBinding",
    "monitoring.dashboards.get",
    "monitoring.dashboards.list",
    "monitoring.dashboards.listEffectiveTags",
    "monitoring.dashboards.listTagBindings",
    "monitoring.dashboards.update",
    "monitoring.groups.create",
    "monitoring.groups.delete",
    "monitoring.groups.get",
    "monitoring.groups.list",
    "monitoring.groups.update",
    "monitoring.metricDescriptors.create",
    "monitoring.metricDescriptors.delete",
    "monitoring.metricDescriptors.get",
    "monitoring.metricDescriptors.list",
    "monitoring.monitoredResourceDescriptors.get",
    "monitoring.monitoredResourceDescriptors.list",
    "monitoring.notificationChannelDescriptors.get",
    "monitoring.notificationChannelDescriptors.list",
    "monitoring.notificationChannels.create",
    "monitoring.notificationChannels.delete",
    "monitoring.notificationChannels.get",
    "monitoring.notificationChannels.list",
    "monitoring.notificationChannels.sendVerificationCode",
    "monitoring.notificationChannels.update",
    "monitoring.notificationChannels.verify",
    "monitoring.services.create",
    "monitoring.services.delete",
    "monitoring.services.get",
    "monitoring.services.list",
    "monitoring.services.update",
    "monitoring.slos.create",
    "monitoring.slos.delete",
    "monitoring.slos.get",
    "monitoring.slos.list",
    "monitoring.slos.update",
    "monitoring.snoozes.create",
    "monitoring.snoozes.get",
    "monitoring.snoozes.list",
    "monitoring.snoozes.update",
    "monitoring.timeSeries.create",
    "monitoring.timeSeries.list",
    "monitoring.uptimeCheckConfigs.create",
    "monitoring.uptimeCheckConfigs.delete",
    "monitoring.uptimeCheckConfigs.get",
    "monitoring.uptimeCheckConfigs.list",
    "monitoring.uptimeCheckConfigs.update",
    "observability.scopes.get",
    "opsconfigmonitoring.resourceMetadata.list",
    "opsconfigmonitoring.resourceMetadata.write",
    "orgpolicy.policy.get",
    "pubsub.messageTransforms.validate",
    "pubsub.schemas.attach",
    "pubsub.schemas.commit",
    "pubsub.schemas.create",
    "pubsub.schemas.delete",
    "pubsub.schemas.get",
    "pubsub.schemas.list",
    "pubsub.schemas.listRevisions",
    "pubsub.schemas.rollback",
    "pubsub.schemas.validate",
    "pubsub.snapshots.create",
    "pubsub.snapshots.delete",
    "pubsub.snapshots.get",
    "pubsub.snapshots.list",
    "pubsub.snapshots.seek",
    "pubsub.snapshots.update",
    "pubsub.subscriptions.consume",
    "pubsub.subscriptions.create",
    "pubsub.subscriptions.delete",
    "pubsub.subscriptions.get",
    "pubsub.subscriptions.list",
    "pubsub.subscriptions.update",
    "pubsub.topics.attachSubscription",
    "pubsub.topics.create",
    "pubsub.topics.delete",
    "pubsub.topics.detachSubscription",
    "pubsub.topics.get",
    "pubsub.topics.list",
    "pubsub.topics.publish",
    "pubsub.topics.update",
    "pubsub.topics.updateTag",
    "recommender.cloudFunctionsPerformanceInsights.get",
    "recommender.cloudFunctionsPerformanceInsights.list",
    "recommender.cloudFunctionsPerformanceInsights.update",
    "recommender.cloudFunctionsPerformanceRecommendations.get",
    "recommender.cloudFunctionsPerformanceRecommendations.list",
    "recommender.cloudFunctionsPerformanceRecommendations.update",
    "recommender.cloudsqlIdleInstanceRecommendations.get",
    "recommender.cloudsqlIdleInstanceRecommendations.list",
    "recommender.cloudsqlIdleInstanceRecommendations.update",
    "recommender.cloudsqlInstanceActivityInsights.get",
    "recommender.cloudsqlInstanceActivityInsights.list",
    "recommender.cloudsqlInstanceActivityInsights.update",
    "recommender.cloudsqlInstanceCpuUsageInsights.get",
    "recommender.cloudsqlInstanceCpuUsageInsights.list",
    "recommender.cloudsqlInstanceCpuUsageInsights.update",
    "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
    "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
    "recommender.cloudsqlInstanceDiskUsageTrendInsights.update",
    "recommender.cloudsqlInstanceMemoryUsageInsights.get",
    "recommender.cloudsqlInstanceMemoryUsageInsights.list",
    "recommender.cloudsqlInstanceMemoryUsageInsights.update",
    "recommender.cloudsqlInstanceOomProbabilityInsights.get",
    "recommender.cloudsqlInstanceOomProbabilityInsights.list",
    "recommender.cloudsqlInstanceOomProbabilityInsights.update",
    "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
    "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
    "recommender.cloudsqlInstanceOutOfDiskRecommendations.update",
    "recommender.cloudsqlInstancePerformanceInsights.get",
    "recommender.cloudsqlInstancePerformanceInsights.list",
    "recommender.cloudsqlInstancePerformanceInsights.update",
    "recommender.cloudsqlInstancePerformanceRecommendations.get",
    "recommender.cloudsqlInstancePerformanceRecommendations.list",
    "recommender.cloudsqlInstancePerformanceRecommendations.update",
    "recommender.cloudsqlInstanceReliabilityInsights.get",
    "recommender.cloudsqlInstanceReliabilityInsights.list",
    "recommender.cloudsqlInstanceReliabilityInsights.update",
    "recommender.cloudsqlInstanceReliabilityRecommendations.get",
    "recommender.cloudsqlInstanceReliabilityRecommendations.list",
    "recommender.cloudsqlInstanceReliabilityRecommendations.update",
    "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
    "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
    "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.update",
    "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
    "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
    "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.update",
    "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
    "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
    "recommender.cloudsqlOverprovisionedInstanceRecommendations.update",
    "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
    "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
    "recommender.cloudsqlUnderProvisionedInstanceRecommendations.update",
    "recommender.locations.get",
    "recommender.locations.list",
    "recommender.runServiceCostInsights.get",
    "recommender.runServiceCostInsights.list",
    "recommender.runServiceCostInsights.update",
    "recommender.runServiceCostRecommendations.get",
    "recommender.runServiceCostRecommendations.list",
    "recommender.runServiceCostRecommendations.update",
    "recommender.runServiceIdentityInsights.get",
    "recommender.runServiceIdentityInsights.list",
    "recommender.runServiceIdentityInsights.update",
    "recommender.runServiceIdentityRecommendations.get",
    "recommender.runServiceIdentityRecommendations.list",
    "recommender.runServiceIdentityRecommendations.update",
    "recommender.runServicePerformanceInsights.get",
    "recommender.runServicePerformanceInsights.list",
    "recommender.runServicePerformanceInsights.update",
    "recommender.runServicePerformanceRecommendations.get",
    "recommender.runServicePerformanceRecommendations.list",
    "recommender.runServicePerformanceRecommendations.update",
    "recommender.runServiceSecurityInsights.get",
    "recommender.runServiceSecurityInsights.list",
    "recommender.runServiceSecurityInsights.update",
    "recommender.runServiceSecurityRecommendations.get",
    "recommender.runServiceSecurityRecommendations.list",
    "recommender.runServiceSecurityRecommendations.update",
    "remotebuildexecution.blobs.get",
    "resourcemanager.projects.get",
    "resourcemanager.projects.list",
    "run.configurations.get",
    "run.configurations.list",
    "run.executions.cancel",
    "run.executions.delete",
    "run.executions.get",
    "run.executions.list",
    "run.jobs.create",
    "run.jobs.delete",
    "run.jobs.get",
    "run.jobs.getIamPolicy",
    "run.jobs.list",
    "run.jobs.listEffectiveTags",
    "run.jobs.listTagBindings",
    "run.jobs.run",
    "run.jobs.runWithOverrides",
    "run.jobs.update",
    "run.locations.list",
    "run.operations.delete",
    "run.operations.get",
    "run.operations.list",
    "run.revisions.delete",
    "run.revisions.get",
    "run.revisions.list",
    "run.routes.get",
    "run.routes.invoke",
    "run.routes.list",
    "run.services.create",
    "run.services.delete",
    "run.services.get",
    "run.services.getIamPolicy",
    "run.services.list",
    "run.services.listEffectiveTags",
    "run.services.listTagBindings",
    "run.services.update",
    "run.tasks.get",
    "run.tasks.list",
    "run.workerpools.create",
    "run.workerpools.delete",
    "run.workerpools.get",
    "run.workerpools.getIamPolicy",
    "run.workerpools.list",
    "run.workerpools.update",
    "serviceusage.quotas.get",
    "serviceusage.services.enable",
    "serviceusage.services.get",
    "serviceusage.services.list",
    "source.repos.create",
    "source.repos.delete",
    "source.repos.get",
    "source.repos.getIamPolicy",
    "source.repos.getProjectConfig",
    "source.repos.list",
    "source.repos.setIamPolicy",
    "source.repos.update",
    "source.repos.updateProjectConfig",
    "source.repos.updateRepoConfig",
    "stackdriver.projects.edit",
    "stackdriver.projects.get",
    "stackdriver.resourceMetadata.list",
    "stackdriver.resourceMetadata.write",
    "storage.folders.create",
    "storage.folders.delete",
    "storage.folders.get",
    "storage.folders.list",
    "storage.folders.rename",
    "storage.managedFolders.create",
    "storage.managedFolders.delete",
    "storage.managedFolders.get",
    "storage.managedFolders.list",
    "storage.multipartUploads.abort",
    "storage.multipartUploads.create",
    "storage.multipartUploads.list",
    "storage.multipartUploads.listParts",
    "storage.objects.create",
    "storage.objects.delete",
    "storage.objects.get",
    "storage.objects.getIamPolicy",
    "storage.objects.list",
    "storage.objects.move",
    "storage.objects.overrideUnlockedRetention",
    "storage.objects.restore",
    "storage.objects.setIamPolicy",
    "storage.objects.setRetention",
    "storage.objects.update"
  ],
  "name": "roles/iam.devOps",
  "stage": "BETA",
  "title": "Dev Ops"
}
