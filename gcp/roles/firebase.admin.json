{
  "description": "Full access to Firebase products.",
  "etag": "AA==",
  "includedPermissions": [
    "apikeys.keys.get",
    "apikeys.keys.getKeyString",
    "apikeys.keys.list",
    "apikeys.keys.lookup",
    "appengine.applications.get",
    "artifactregistry.attachments.get",
    "artifactregistry.attachments.list",
    "artifactregistry.dockerimages.get",
    "artifactregistry.dockerimages.list",
    "artifactregistry.files.download",
    "artifactregistry.files.get",
    "artifactregistry.files.list",
    "artifactregistry.locations.get",
    "artifactregistry.locations.list",
    "artifactregistry.mavenartifacts.get",
    "artifactregistry.mavenartifacts.list",
    "artifactregistry.npmpackages.get",
    "artifactregistry.npmpackages.list",
    "artifactregistry.packages.get",
    "artifactregistry.packages.list",
    "artifactregistry.projectsettings.get",
    "artifactregistry.pythonpackages.get",
    "artifactregistry.pythonpackages.list",
    "artifactregistry.repositories.downloadArtifacts",
    "artifactregistry.repositories.exportArtifacts",
    "artifactregistry.repositories.get",
    "artifactregistry.repositories.list",
    "artifactregistry.repositories.listEffectiveTags",
    "artifactregistry.repositories.listTagBindings",
    "artifactregistry.repositories.readViaVirtualRepository",
    "artifactregistry.rules.get",
    "artifactregistry.rules.list",
    "artifactregistry.tags.get",
    "artifactregistry.tags.list",
    "artifactregistry.versions.get",
    "artifactregistry.versions.list",
    "automl.annotationSpecs.create",
    "automl.annotationSpecs.delete",
    "automl.annotationSpecs.get",
    "automl.annotationSpecs.list",
    "automl.annotationSpecs.update",
    "automl.annotations.approve",
    "automl.annotations.create",
    "automl.annotations.list",
    "automl.annotations.manipulate",
    "automl.annotations.reject",
    "automl.columnSpecs.get",
    "automl.columnSpecs.list",
    "automl.columnSpecs.update",
    "automl.datasets.create",
    "automl.datasets.delete",
    "automl.datasets.export",
    "automl.datasets.get",
    "automl.datasets.getIamPolicy",
    "automl.datasets.import",
    "automl.datasets.list",
    "automl.datasets.setIamPolicy",
    "automl.datasets.update",
    "automl.examples.delete",
    "automl.examples.get",
    "automl.examples.list",
    "automl.examples.update",
    "automl.files.delete",
    "automl.files.list",
    "automl.humanAnnotationTasks.create",
    "automl.humanAnnotationTasks.delete",
    "automl.humanAnnotationTasks.get",
    "automl.humanAnnotationTasks.list",
    "automl.locations.get",
    "automl.locations.getIamPolicy",
    "automl.locations.list",
    "automl.locations.setIamPolicy",
    "automl.modelEvaluations.create",
    "automl.modelEvaluations.get",
    "automl.modelEvaluations.list",
    "automl.models.create",
    "automl.models.delete",
    "automl.models.deploy",
    "automl.models.export",
    "automl.models.get",
    "automl.models.getIamPolicy",
    "automl.models.list",
    "automl.models.predict",
    "automl.models.setIamPolicy",
    "automl.models.undeploy",
    "automl.operations.cancel",
    "automl.operations.delete",
    "automl.operations.get",
    "automl.operations.list",
    "automl.tableSpecs.get",
    "automl.tableSpecs.list",
    "automl.tableSpecs.update",
    "clientauthconfig.brands.get",
    "clientauthconfig.brands.list",
    "clientauthconfig.brands.update",
    "clientauthconfig.clients.create",
    "clientauthconfig.clients.delete",
    "clientauthconfig.clients.get",
    "clientauthconfig.clients.list",
    "clientauthconfig.clients.update",
    "cloudasset.assets.searchAllResources",
    "cloudbuild.builds.get",
    "cloudbuild.builds.list",
    "cloudbuild.locations.get",
    "cloudbuild.locations.list",
    "cloudbuild.operations.get",
    "cloudbuild.operations.list",
    "cloudconfig.configs.get",
    "cloudconfig.configs.update",
    "cloudfunctions.functions.call",
    "cloudfunctions.functions.create",
    "cloudfunctions.functions.delete",
    "cloudfunctions.functions.generationUpgrade",
    "cloudfunctions.functions.get",
    "cloudfunctions.functions.getIamPolicy",
    "cloudfunctions.functions.invoke",
    "cloudfunctions.functions.list",
    "cloudfunctions.functions.setIamPolicy",
    "cloudfunctions.functions.sourceCodeGet",
    "cloudfunctions.functions.sourceCodeSet",
    "cloudfunctions.functions.update",
    "cloudfunctions.locations.list",
    "cloudfunctions.operations.get",
    "cloudfunctions.operations.list",
    "cloudkms.keyHandles.create",
    "cloudkms.keyHandles.get",
    "cloudkms.keyHandles.list",
    "cloudkms.operations.get",
    "cloudkms.projects.showEffectiveAutokeyConfig",
    "cloudmessaging.messages.create",
    "cloudnotifications.activities.list",
    "cloudtestservice.environmentcatalog.get",
    "cloudtestservice.matrices.create",
    "cloudtestservice.matrices.get",
    "cloudtestservice.matrices.update",
    "cloudtoolresults.executions.create",
    "cloudtoolresults.executions.get",
    "cloudtoolresults.executions.list",
    "cloudtoolresults.executions.update",
    "cloudtoolresults.histories.create",
    "cloudtoolresults.histories.get",
    "cloudtoolresults.histories.list",
    "cloudtoolresults.settings.create",
    "cloudtoolresults.settings.get",
    "cloudtoolresults.settings.update",
    "cloudtoolresults.steps.create",
    "cloudtoolresults.steps.get",
    "cloudtoolresults.steps.list",
    "cloudtoolresults.steps.update",
    "databasesconsole.locations.get",
    "databasesconsole.locations.list",
    "databasesconsole.studioQueries.create",
    "databasesconsole.studioQueries.delete",
    "databasesconsole.studioQueries.get",
    "databasesconsole.studioQueries.list",
    "databasesconsole.studioQueries.search",
    "databasesconsole.studioQueries.update",
    "datastore.backupSchedules.create",
    "datastore.backupSchedules.delete",
    "datastore.backupSchedules.get",
    "datastore.backupSchedules.list",
    "datastore.backupSchedules.update",
    "datastore.backups.delete",
    "datastore.backups.get",
    "datastore.backups.list",
    "datastore.backups.restoreDatabase",
    "datastore.databases.bulkDelete",
    "datastore.databases.clone",
    "datastore.databases.create",
    "datastore.databases.createTagBinding",
    "datastore.databases.delete",
    "datastore.databases.deleteTagBinding",
    "datastore.databases.export",
    "datastore.databases.get",
    "datastore.databases.getMetadata",
    "datastore.databases.import",
    "datastore.databases.list",
    "datastore.databases.listEffectiveTags",
    "datastore.databases.listTagBindings",
    "datastore.databases.update",
    "datastore.entities.allocateIds",
    "datastore.entities.create",
    "datastore.entities.delete",
    "datastore.entities.get",
    "datastore.entities.list",
    "datastore.entities.update",
    "datastore.indexes.create",
    "datastore.indexes.delete",
    "datastore.indexes.get",
    "datastore.indexes.list",
    "datastore.indexes.update",
    "datastore.insights.get",
    "datastore.keyVisualizerScans.get",
    "datastore.keyVisualizerScans.list",
    "datastore.locations.get",
    "datastore.locations.list",
    "datastore.namespaces.get",
    "datastore.namespaces.list",
    "datastore.operations.cancel",
    "datastore.operations.delete",
    "datastore.operations.get",
    "datastore.operations.list",
    "datastore.statistics.get",
    "datastore.statistics.list",
    "datastore.userCreds.create",
    "datastore.userCreds.delete",
    "datastore.userCreds.get",
    "datastore.userCreds.list",
    "datastore.userCreds.update",
    "errorreporting.groups.list",
    "eventarc.channelConnections.create",
    "eventarc.channelConnections.delete",
    "eventarc.channelConnections.get",
    "eventarc.channelConnections.getIamPolicy",
    "eventarc.channelConnections.list",
    "eventarc.channelConnections.publish",
    "eventarc.channelConnections.setIamPolicy",
    "eventarc.channels.attach",
    "eventarc.channels.create",
    "eventarc.channels.delete",
    "eventarc.channels.get",
    "eventarc.channels.getIamPolicy",
    "eventarc.channels.list",
    "eventarc.channels.publish",
    "eventarc.channels.setIamPolicy",
    "eventarc.channels.undelete",
    "eventarc.channels.update",
    "eventarc.enrollments.create",
    "eventarc.enrollments.delete",
    "eventarc.enrollments.get",
    "eventarc.enrollments.getIamPolicy",
    "eventarc.enrollments.list",
    "eventarc.enrollments.setIamPolicy",
    "eventarc.enrollments.update",
    "eventarc.events.receiveAuditLogWritten",
    "eventarc.events.receiveEvent",
    "eventarc.googleApiSources.create",
    "eventarc.googleApiSources.delete",
    "eventarc.googleApiSources.get",
    "eventarc.googleApiSources.getIamPolicy",
    "eventarc.googleApiSources.list",
    "eventarc.googleApiSources.setIamPolicy",
    "eventarc.googleApiSources.update",
    "eventarc.googleChannelConfigs.get",
    "eventarc.googleChannelConfigs.update",
    "eventarc.kafkaSources.create",
    "eventarc.kafkaSources.delete",
    "eventarc.kafkaSources.get",
    "eventarc.kafkaSources.getIamPolicy",
    "eventarc.kafkaSources.list",
    "eventarc.kafkaSources.setIamPolicy",
    "eventarc.locations.get",
    "eventarc.locations.list",
    "eventarc.messageBuses.create",
    "eventarc.messageBuses.delete",
    "eventarc.messageBuses.get",
    "eventarc.messageBuses.getIamPolicy",
    "eventarc.messageBuses.list",
    "eventarc.messageBuses.publish",
    "eventarc.messageBuses.setIamPolicy",
    "eventarc.messageBuses.update",
    "eventarc.messageBuses.use",
    "eventarc.multiProjectSources.collectGoogleApiEvents",
    "eventarc.operations.cancel",
    "eventarc.operations.delete",
    "eventarc.operations.get",
    "eventarc.operations.list",
    "eventarc.pipelines.create",
    "eventarc.pipelines.delete",
    "eventarc.pipelines.get",
    "eventarc.pipelines.getIamPolicy",
    "eventarc.pipelines.list",
    "eventarc.pipelines.setIamPolicy",
    "eventarc.pipelines.update",
    "eventarc.providers.get",
    "eventarc.providers.list",
    "eventarc.triggers.create",
    "eventarc.triggers.delete",
    "eventarc.triggers.get",
    "eventarc.triggers.getIamPolicy",
    "eventarc.triggers.list",
    "eventarc.triggers.setIamPolicy",
    "eventarc.triggers.undelete",
    "eventarc.triggers.update",
    "fcmdata.deliverydata.list",
    "firebase.billingPlans.get",
    "firebase.billingPlans.update",
    "firebase.clients.create",
    "firebase.clients.delete",
    "firebase.clients.get",
    "firebase.clients.list",
    "firebase.clients.undelete",
    "firebase.clients.update",
    "firebase.links.create",
    "firebase.links.delete",
    "firebase.links.list",
    "firebase.links.update",
    "firebase.playLinks.get",
    "firebase.playLinks.list",
    "firebase.playLinks.update",
    "firebase.projects.delete",
    "firebase.projects.get",
    "firebase.projects.update",
    "firebaseabt.experimentresults.get",
    "firebaseabt.experiments.create",
    "firebaseabt.experiments.delete",
    "firebaseabt.experiments.get",
    "firebaseabt.experiments.list",
    "firebaseabt.experiments.update",
    "firebaseabt.projectmetadata.get",
    "firebaseanalytics.resources.googleAnalyticsEdit",
    "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
    "firebaseappcheck.appAttestConfig.get",
    "firebaseappcheck.appAttestConfig.update",
    "firebaseappcheck.appCheckTokens.verify",
    "firebaseappcheck.automations.create",
    "firebaseappcheck.automations.delete",
    "firebaseappcheck.automations.get",
    "firebaseappcheck.automations.list",
    "firebaseappcheck.automations.resume",
    "firebaseappcheck.automations.suspend",
    "firebaseappcheck.automations.update",
    "firebaseappcheck.debugTokens.get",
    "firebaseappcheck.debugTokens.update",
    "firebaseappcheck.deviceCheckConfig.get",
    "firebaseappcheck.deviceCheckConfig.update",
    "firebaseappcheck.playIntegrityConfig.get",
    "firebaseappcheck.playIntegrityConfig.update",
    "firebaseappcheck.recaptchaEnterpriseConfig.get",
    "firebaseappcheck.recaptchaEnterpriseConfig.update",
    "firebaseappcheck.recaptchaV3Config.get",
    "firebaseappcheck.recaptchaV3Config.update",
    "firebaseappcheck.resourcePolicies.get",
    "firebaseappcheck.resourcePolicies.update",
    "firebaseappcheck.safetyNetConfig.get",
    "firebaseappcheck.safetyNetConfig.update",
    "firebaseappcheck.services.get",
    "firebaseappcheck.services.update",
    "firebaseappdistro.groups.list",
    "firebaseappdistro.groups.update",
    "firebaseappdistro.releases.list",
    "firebaseappdistro.releases.update",
    "firebaseappdistro.testers.list",
    "firebaseappdistro.testers.update",
    "firebaseapphosting.backends.create",
    "firebaseapphosting.backends.delete",
    "firebaseapphosting.backends.get",
    "firebaseapphosting.backends.list",
    "firebaseapphosting.backends.update",
    "firebaseapphosting.builds.create",
    "firebaseapphosting.builds.delete",
    "firebaseapphosting.builds.get",
    "firebaseapphosting.builds.list",
    "firebaseapphosting.builds.update",
    "firebaseapphosting.domains.create",
    "firebaseapphosting.domains.delete",
    "firebaseapphosting.domains.get",
    "firebaseapphosting.domains.list",
    "firebaseapphosting.domains.update",
    "firebaseapphosting.locations.get",
    "firebaseapphosting.locations.list",
    "firebaseapphosting.operations.cancel",
    "firebaseapphosting.operations.delete",
    "firebaseapphosting.operations.get",
    "firebaseapphosting.operations.list",
    "firebaseapphosting.rollouts.create",
    "firebaseapphosting.rollouts.delete",
    "firebaseapphosting.rollouts.get",
    "firebaseapphosting.rollouts.list",
    "firebaseapphosting.rollouts.update",
    "firebaseapphosting.traffic.get",
    "firebaseapphosting.traffic.update",
    "firebaseauth.configs.create",
    "firebaseauth.configs.get",
    "firebaseauth.configs.getHashConfig",
    "firebaseauth.configs.getSecret",
    "firebaseauth.configs.update",
    "firebaseauth.users.create",
    "firebaseauth.users.createSession",
    "firebaseauth.users.delete",
    "firebaseauth.users.get",
    "firebaseauth.users.sendEmail",
    "firebaseauth.users.update",
    "firebasecrash.issues.update",
    "firebasecrash.reports.get",
    "firebasecrashlytics.config.get",
    "firebasecrashlytics.config.update",
    "firebasecrashlytics.data.get",
    "firebasecrashlytics.issues.get",
    "firebasecrashlytics.issues.list",
    "firebasecrashlytics.issues.update",
    "firebasecrashlytics.sessions.get",
    "firebasedatabase.instances.create",
    "firebasedatabase.instances.delete",
    "firebasedatabase.instances.disable",
    "firebasedatabase.instances.get",
    "firebasedatabase.instances.list",
    "firebasedatabase.instances.reenable",
    "firebasedatabase.instances.undelete",
    "firebasedatabase.instances.update",
    "firebasedataconnect.connectorRevisions.delete",
    "firebasedataconnect.connectorRevisions.get",
    "firebasedataconnect.connectorRevisions.list",
    "firebasedataconnect.connectors.create",
    "firebasedataconnect.connectors.delete",
    "firebasedataconnect.connectors.get",
    "firebasedataconnect.connectors.impersonateMutation",
    "firebasedataconnect.connectors.impersonateQuery",
    "firebasedataconnect.connectors.list",
    "firebasedataconnect.connectors.update",
    "firebasedataconnect.locations.get",
    "firebasedataconnect.locations.list",
    "firebasedataconnect.operations.cancel",
    "firebasedataconnect.operations.delete",
    "firebasedataconnect.operations.get",
    "firebasedataconnect.operations.list",
    "firebasedataconnect.schemaRevisions.delete",
    "firebasedataconnect.schemaRevisions.get",
    "firebasedataconnect.schemaRevisions.list",
    "firebasedataconnect.schemas.create",
    "firebasedataconnect.schemas.delete",
    "firebasedataconnect.schemas.get",
    "firebasedataconnect.schemas.list",
    "firebasedataconnect.schemas.update",
    "firebasedataconnect.services.create",
    "firebasedataconnect.services.delete",
    "firebasedataconnect.services.executeGraphql",
    "firebasedataconnect.services.executeGraphqlRead",
    "firebasedataconnect.services.get",
    "firebasedataconnect.services.introspectGraphql",
    "firebasedataconnect.services.list",
    "firebasedataconnect.services.update",
    "firebasedynamiclinks.destinations.list",
    "firebasedynamiclinks.destinations.update",
    "firebasedynamiclinks.domains.create",
    "firebasedynamiclinks.domains.delete",
    "firebasedynamiclinks.domains.get",
    "firebasedynamiclinks.domains.list",
    "firebasedynamiclinks.domains.update",
    "firebasedynamiclinks.links.create",
    "firebasedynamiclinks.links.get",
    "firebasedynamiclinks.links.list",
    "firebasedynamiclinks.links.update",
    "firebasedynamiclinks.stats.get",
    "firebaseextensions.configs.create",
    "firebaseextensions.configs.delete",
    "firebaseextensions.configs.list",
    "firebaseextensions.configs.update",
    "firebaseextensionspublisher.extensions.create",
    "firebaseextensionspublisher.extensions.delete",
    "firebaseextensionspublisher.extensions.get",
    "firebaseextensionspublisher.extensions.list",
    "firebasehosting.sites.create",
    "firebasehosting.sites.delete",
    "firebasehosting.sites.get",
    "firebasehosting.sites.list",
    "firebasehosting.sites.update",
    "firebaseinappmessaging.campaigns.create",
    "firebaseinappmessaging.campaigns.delete",
    "firebaseinappmessaging.campaigns.get",
    "firebaseinappmessaging.campaigns.list",
    "firebaseinappmessaging.campaigns.update",
    "firebasemessagingcampaigns.campaigns.create",
    "firebasemessagingcampaigns.campaigns.delete",
    "firebasemessagingcampaigns.campaigns.get",
    "firebasemessagingcampaigns.campaigns.list",
    "firebasemessagingcampaigns.campaigns.start",
    "firebasemessagingcampaigns.campaigns.stop",
    "firebasemessagingcampaigns.campaigns.update",
    "firebaseml.models.create",
    "firebaseml.models.delete",
    "firebaseml.models.get",
    "firebaseml.models.list",
    "firebaseml.models.update",
    "firebaseml.modelversions.create",
    "firebaseml.modelversions.get",
    "firebaseml.modelversions.list",
    "firebaseml.modelversions.update",
    "firebasenotifications.messages.create",
    "firebasenotifications.messages.delete",
    "firebasenotifications.messages.get",
    "firebasenotifications.messages.list",
    "firebasenotifications.messages.update",
    "firebaseperformance.config.update",
    "firebaseperformance.data.get",
    "firebaserules.releases.create",
    "firebaserules.releases.delete",
    "firebaserules.releases.get",
    "firebaserules.releases.getExecutable",
    "firebaserules.releases.list",
    "firebaserules.releases.update",
    "firebaserules.rulesets.create",
    "firebaserules.rulesets.delete",
    "firebaserules.rulesets.get",
    "firebaserules.rulesets.list",
    "firebaserules.rulesets.test",
    "firebasestorage.buckets.addFirebase",
    "firebasestorage.buckets.get",
    "firebasestorage.buckets.list",
    "firebasestorage.buckets.removeFirebase",
    "firebasestorage.defaultBucket.create",
    "firebasestorage.defaultBucket.delete",
    "firebasestorage.defaultBucket.get",
    "firebasevertexai.configs.get",
    "firebasevertexai.configs.update",
    "logging.logEntries.list",
    "monitoring.timeSeries.create",
    "monitoring.timeSeries.list",
    "oauthconfig.verification.get",
    "orgpolicy.policy.get",
    "recommender.cloudFunctionsPerformanceInsights.get",
    "recommender.cloudFunctionsPerformanceInsights.list",
    "recommender.cloudFunctionsPerformanceInsights.update",
    "recommender.cloudFunctionsPerformanceRecommendations.get",
    "recommender.cloudFunctionsPerformanceRecommendations.list",
    "recommender.cloudFunctionsPerformanceRecommendations.update",
    "recommender.iamPolicyInsights.get",
    "recommender.iamPolicyInsights.list",
    "recommender.iamPolicyInsights.update",
    "recommender.iamPolicyRecommendations.get",
    "recommender.iamPolicyRecommendations.list",
    "recommender.iamPolicyRecommendations.update",
    "recommender.locations.get",
    "recommender.locations.list",
    "recommender.runServiceCostInsights.get",
    "recommender.runServiceCostInsights.list",
    "recommender.runServiceCostInsights.update",
    "recommender.runServiceCostRecommendations.get",
    "recommender.runServiceCostRecommendations.list",
    "recommender.runServiceCostRecommendations.update",
    "recommender.runServiceIdentityInsights.get",
    "recommender.runServiceIdentityInsights.list",
    "recommender.runServiceIdentityInsights.update",
    "recommender.runServiceIdentityRecommendations.get",
    "recommender.runServiceIdentityRecommendations.list",
    "recommender.runServiceIdentityRecommendations.update",
    "recommender.runServicePerformanceInsights.get",
    "recommender.runServicePerformanceInsights.list",
    "recommender.runServicePerformanceInsights.update",
    "recommender.runServicePerformanceRecommendations.get",
    "recommender.runServicePerformanceRecommendations.list",
    "recommender.runServicePerformanceRecommendations.update",
    "recommender.runServiceSecurityInsights.get",
    "recommender.runServiceSecurityInsights.list",
    "recommender.runServiceSecurityInsights.update",
    "recommender.runServiceSecurityRecommendations.get",
    "recommender.runServiceSecurityRecommendations.list",
    "recommender.runServiceSecurityRecommendations.update",
    "recommender.storageBucketSoftDeleteInsights.get",
    "recommender.storageBucketSoftDeleteInsights.list",
    "recommender.storageBucketSoftDeleteInsights.update",
    "recommender.storageBucketSoftDeleteRecommendations.get",
    "recommender.storageBucketSoftDeleteRecommendations.list",
    "recommender.storageBucketSoftDeleteRecommendations.update",
    "remotebuildexecution.blobs.get",
    "resourcemanager.hierarchyNodes.listEffectiveTags",
    "resourcemanager.projects.get",
    "resourcemanager.projects.getIamPolicy",
    "resourcemanager.projects.list",
    "run.configurations.get",
    "run.configurations.list",
    "run.executions.cancel",
    "run.executions.delete",
    "run.executions.get",
    "run.executions.list",
    "run.jobs.create",
    "run.jobs.createTagBinding",
    "run.jobs.delete",
    "run.jobs.deleteTagBinding",
    "run.jobs.get",
    "run.jobs.getIamPolicy",
    "run.jobs.list",
    "run.jobs.listEffectiveTags",
    "run.jobs.listTagBindings",
    "run.jobs.run",
    "run.jobs.runWithOverrides",
    "run.jobs.setIamPolicy",
    "run.jobs.update",
    "run.locations.list",
    "run.operations.delete",
    "run.operations.get",
    "run.operations.list",
    "run.revisions.delete",
    "run.revisions.get",
    "run.revisions.list",
    "run.routes.get",
    "run.routes.invoke",
    "run.routes.list",
    "run.services.create",
    "run.services.createTagBinding",
    "run.services.delete",
    "run.services.deleteTagBinding",
    "run.services.get",
    "run.services.getIamPolicy",
    "run.services.list",
    "run.services.listEffectiveTags",
    "run.services.listTagBindings",
    "run.services.setIamPolicy",
    "run.services.update",
    "run.tasks.get",
    "run.tasks.list",
    "run.workerpools.create",
    "run.workerpools.delete",
    "run.workerpools.get",
    "run.workerpools.getIamPolicy",
    "run.workerpools.list",
    "run.workerpools.setIamPolicy",
    "run.workerpools.update",
    "runtimeconfig.configs.create",
    "runtimeconfig.configs.delete",
    "runtimeconfig.configs.get",
    "runtimeconfig.configs.list",
    "runtimeconfig.configs.update",
    "runtimeconfig.operations.get",
    "runtimeconfig.operations.list",
    "runtimeconfig.variables.create",
    "runtimeconfig.variables.delete",
    "runtimeconfig.variables.get",
    "runtimeconfig.variables.list",
    "runtimeconfig.variables.update",
    "runtimeconfig.variables.watch",
    "runtimeconfig.waiters.create",
    "runtimeconfig.waiters.delete",
    "runtimeconfig.waiters.get",
    "runtimeconfig.waiters.list",
    "runtimeconfig.waiters.update",
    "serviceusage.consumerpolicy.analyze",
    "serviceusage.consumerpolicy.get",
    "serviceusage.contentsecuritypolicy.get",
    "serviceusage.effectivemcppolicy.get",
    "serviceusage.effectivepolicy.get",
    "serviceusage.groups.list",
    "serviceusage.groups.listExpandedMembers",
    "serviceusage.groups.listMembers",
    "serviceusage.mcppolicy.get",
    "serviceusage.operations.get",
    "serviceusage.quotas.get",
    "serviceusage.services.get",
    "serviceusage.services.list",
    "serviceusage.values.test",
    "storage.anywhereCaches.create",
    "storage.anywhereCaches.disable",
    "storage.anywhereCaches.get",
    "storage.anywhereCaches.list",
    "storage.anywhereCaches.pause",
    "storage.anywhereCaches.resume",
    "storage.anywhereCaches.update",
    "storage.bucketOperations.cancel",
    "storage.bucketOperations.get",
    "storage.bucketOperations.list",
    "storage.buckets.create",
    "storage.buckets.createTagBinding",
    "storage.buckets.delete",
    "storage.buckets.deleteTagBinding",
    "storage.buckets.enableObjectRetention",
    "storage.buckets.get",
    "storage.buckets.getIamPolicy",
    "storage.buckets.getIpFilter",
    "storage.buckets.getObjectInsights",
    "storage.buckets.list",
    "storage.buckets.listEffectiveTags",
    "storage.buckets.listTagBindings",
    "storage.buckets.relocate",
    "storage.buckets.restore",
    "storage.buckets.setIamPolicy",
    "storage.buckets.setIpFilter",
    "storage.buckets.update",
    "storage.folders.create",
    "storage.folders.delete",
    "storage.folders.get",
    "storage.folders.list",
    "storage.folders.rename",
    "storage.intelligenceConfigs.get",
    "storage.intelligenceConfigs.update",
    "storage.managedFolders.create",
    "storage.managedFolders.delete",
    "storage.managedFolders.get",
    "storage.managedFolders.getIamPolicy",
    "storage.managedFolders.list",
    "storage.managedFolders.setIamPolicy",
    "storage.multipartUploads.abort",
    "storage.multipartUploads.create",
    "storage.multipartUploads.list",
    "storage.multipartUploads.listParts",
    "storage.objects.create",
    "storage.objects.delete",
    "storage.objects.get",
    "storage.objects.getIamPolicy",
    "storage.objects.list",
    "storage.objects.move",
    "storage.objects.overrideUnlockedRetention",
    "storage.objects.restore",
    "storage.objects.setIamPolicy",
    "storage.objects.setRetention",
    "storage.objects.update"
  ],
  "name": "roles/firebase.admin",
  "stage": "GA",
  "title": "Firebase Admin"
}
