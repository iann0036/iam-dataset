{
  "description": "Full control of Cloud Composer environments and Cloud Storage objects.",
  "etag": "AA==",
  "includedPermissions": [
    "cloudkms.keyHandles.create",
    "cloudkms.keyHandles.get",
    "cloudkms.keyHandles.list",
    "cloudkms.operations.get",
    "cloudkms.projects.showEffectiveAutokeyConfig",
    "composer.dags.execute",
    "composer.dags.get",
    "composer.dags.getSourceCode",
    "composer.dags.list",
    "composer.environments.create",
    "composer.environments.delete",
    "composer.environments.executeAirflowCommand",
    "composer.environments.get",
    "composer.environments.list",
    "composer.environments.update",
    "composer.imageversions.list",
    "composer.operations.delete",
    "composer.operations.get",
    "composer.operations.list",
    "composer.userworkloadsconfigmaps.create",
    "composer.userworkloadsconfigmaps.delete",
    "composer.userworkloadsconfigmaps.get",
    "composer.userworkloadsconfigmaps.list",
    "composer.userworkloadsconfigmaps.update",
    "composer.userworkloadssecrets.create",
    "composer.userworkloadssecrets.delete",
    "composer.userworkloadssecrets.get",
    "composer.userworkloadssecrets.list",
    "composer.userworkloadssecrets.update",
    "monitoring.timeSeries.create",
    "orgpolicy.policy.get",
    "resourcemanager.projects.get",
    "resourcemanager.projects.list",
    "serviceusage.consumerpolicy.analyze",
    "serviceusage.consumerpolicy.get",
    "serviceusage.effectivepolicy.get",
    "serviceusage.groups.list",
    "serviceusage.groups.listExpandedMembers",
    "serviceusage.groups.listMembers",
    "serviceusage.quotas.get",
    "serviceusage.services.get",
    "serviceusage.services.list",
    "serviceusage.values.test",
    "storage.folders.create",
    "storage.folders.delete",
    "storage.folders.get",
    "storage.folders.list",
    "storage.folders.rename",
    "storage.managedFolders.create",
    "storage.managedFolders.delete",
    "storage.managedFolders.get",
    "storage.managedFolders.list",
    "storage.multipartUploads.abort",
    "storage.multipartUploads.create",
    "storage.multipartUploads.list",
    "storage.multipartUploads.listParts",
    "storage.objects.create",
    "storage.objects.delete",
    "storage.objects.get",
    "storage.objects.getIamPolicy",
    "storage.objects.list",
    "storage.objects.move",
    "storage.objects.overrideUnlockedRetention",
    "storage.objects.restore",
    "storage.objects.setIamPolicy",
    "storage.objects.setRetention",
    "storage.objects.update"
  ],
  "name": "roles/composer.environmentAndStorageObjectAdmin",
  "stage": "GA",
  "title": "Environment and Storage Object Administrator"
}
