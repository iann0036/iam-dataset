{
  "description": "Discovery Engine service uploads documents and user events from Cloud Storage and BigQuery, reports results to the customer Cloud Storage bucket, writes logs to customer projects using Cloud Logging, and writes and reads metrics for customer using Cloud Monitoring.",
  "etag": "AA==",
  "includedPermissions": [
    "aiplatform.executions.create",
    "aiplatform.executions.delete",
    "aiplatform.executions.update",
    "aiplatform.extensions.delete",
    "aiplatform.extensions.execute",
    "aiplatform.extensions.get",
    "aiplatform.extensions.import",
    "aiplatform.extensions.list",
    "aiplatform.extensions.update",
    "aiplatform.operations.list",
    "aiplatform.reasoningEngines.create",
    "aiplatform.reasoningEngines.delete",
    "aiplatform.reasoningEngines.get",
    "aiplatform.reasoningEngines.list",
    "aiplatform.reasoningEngines.query",
    "aiplatform.reasoningEngines.update",
    "alloydb.clusters.export",
    "alloydb.databases.list",
    "alloydb.instances.get",
    "alloydb.operations.get",
    "bigquery.datasets.create",
    "bigquery.datasets.get",
    "bigquery.jobs.create",
    "bigquery.jobs.get",
    "bigquery.jobs.list",
    "bigquery.jobs.update",
    "bigquery.tables.create",
    "bigquery.tables.export",
    "bigquery.tables.get",
    "bigquery.tables.getData",
    "bigquery.tables.list",
    "bigquery.tables.update",
    "bigquery.tables.updateData",
    "bigtable.tables.readRows",
    "bigtable.tables.sampleRowKeys",
    "cloudsql.databases.get",
    "cloudsql.instances.export",
    "cloudsql.instances.get",
    "datastore.databases.export",
    "datastore.databases.get",
    "datastore.databases.getMetadata",
    "datastore.operations.get",
    "dialogflow.sessions.detectIntent",
    "discoveryengine.completionConfigs.completeQuery",
    "discoveryengine.conversations.converse",
    "discoveryengine.conversations.create",
    "discoveryengine.dataStores.completeQuery",
    "discoveryengine.servingConfigs.answer",
    "discoveryengine.servingConfigs.search",
    "discoveryengine.userEvents.create",
    "integrations.apigeeExecutions.list",
    "integrations.apigeeIntegrationVers.get",
    "integrations.apigeeIntegrationVers.list",
    "integrations.integrationVersions.get",
    "integrations.integrationVersions.invoke",
    "integrations.integrationVersions.list",
    "integrations.integrations.get",
    "integrations.integrations.invoke",
    "integrations.integrations.list",
    "integrations.testCases.get",
    "integrations.testCases.invoke",
    "integrations.testCases.list",
    "logging.logEntries.create",
    "modelarmor.templates.useToSanitizeModelResponse",
    "modelarmor.templates.useToSanitizeUserPrompt",
    "monitoring.metricDescriptors.create",
    "monitoring.metricDescriptors.get",
    "monitoring.metricDescriptors.list",
    "monitoring.monitoredResourceDescriptors.get",
    "monitoring.monitoredResourceDescriptors.list",
    "monitoring.timeSeries.create",
    "monitoring.timeSeries.list",
    "resourcemanager.projects.get",
    "resourcemanager.projects.list",
    "spanner.databases.beginReadOnlyTransaction",
    "spanner.databases.partitionQuery",
    "spanner.databases.select",
    "spanner.databases.useDataBoost",
    "spanner.sessions.create",
    "storage.buckets.create",
    "storage.buckets.get",
    "storage.buckets.getIamPolicy",
    "storage.buckets.setIamPolicy",
    "storage.managedFolders.create",
    "storage.managedFolders.delete",
    "storage.managedFolders.get",
    "storage.managedFolders.getIamPolicy",
    "storage.managedFolders.list",
    "storage.managedFolders.setIamPolicy",
    "storage.objects.create",
    "storage.objects.delete",
    "storage.objects.get",
    "storage.objects.list",
    "storage.objects.update"
  ],
  "name": "roles/discoveryengine.serviceAgent",
  "stage": "GA",
  "title": "Discovery Engine Service Agent"
}
