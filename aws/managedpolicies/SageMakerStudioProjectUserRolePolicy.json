{
  "access_levels": [
    "List",
    "Read",
    "Tagging",
    "Write",
    "Permissions management"
  ],
  "arn": "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePolicy",
  "createdate": "2025-09-11T17:34:06Z",
  "credentials_exposure": true,
  "data_access": true,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "codecommit:BatchGetCommits",
          "codecommit:BatchGetPullRequests",
          "codecommit:BatchGetRepositories",
          "codecommit:BatchDescribeMergeConflicts",
          "codecommit:CreateBranch",
          "codecommit:CreateCommit",
          "codecommit:CreatePullRequest",
          "codecommit:DeleteBranch",
          "codecommit:DeleteFile",
          "codecommit:DescribeMergeConflicts",
          "codecommit:DescribePullRequestEvents",
          "codecommit:GetBlob",
          "codecommit:GetBranch",
          "codecommit:GetComment",
          "codecommit:GetCommentReactions",
          "codecommit:GetCommentsForComparedCommit",
          "codecommit:GetCommentsForPullRequest",
          "codecommit:GetCommit",
          "codecommit:GetCommitHistory",
          "codecommit:GetCommitsFromMergeBase",
          "codecommit:GetDifferences",
          "codecommit:GetFile",
          "codecommit:GetFolder",
          "codecommit:GetMergeCommit",
          "codecommit:GetMergeConflicts",
          "codecommit:GetMergeOptions",
          "codecommit:GetObjectIdentifier",
          "codecommit:GetPullRequest",
          "codecommit:GetPullRequestApprovalStates",
          "codecommit:GetPullRequestOverrideState",
          "codecommit:GetReferences",
          "codecommit:GetRepository",
          "codecommit:GetRepositoryTriggers",
          "codecommit:GetTree",
          "codecommit:GetUploadArchiveStatus",
          "codecommit:GitPull",
          "codecommit:GitPush",
          "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
          "codecommit:ListBranches",
          "codecommit:ListFileCommitHistory",
          "codecommit:ListPullRequests",
          "codecommit:ListTagsForResource",
          "codecommit:MergeBranchesByFastForward",
          "codecommit:MergeBranchesBySquash",
          "codecommit:MergeBranchesByThreeWay",
          "codecommit:MergePullRequestByFastForward",
          "codecommit:MergePullRequestBySquash",
          "codecommit:MergePullRequestByThreeWay",
          "codecommit:UpdateComment",
          "codecommit:UpdateDefaultBranch",
          "codecommit:UpdatePullRequestApprovalRuleContent",
          "codecommit:UpdatePullRequestApprovalState",
          "codecommit:UpdatePullRequestDescription",
          "codecommit:UpdatePullRequestStatus",
          "codecommit:UpdatePullRequestTitle",
          "codecommit:UpdateRepositoryDescription",
          "codecommit:PostCommentForComparedCommit",
          "codecommit:PostCommentForPullRequest",
          "codecommit:PostCommentReply",
          "codecommit:PutCommentReaction",
          "codecommit:PutFile"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "CommonUserCodeCommitPermissions"
      },
      {
        "Action": [
          "kms:ReEncryptFrom",
          "kms:ReEncryptTo",
          "kms:Decrypt",
          "kms:Encrypt",
          "kms:GenerateDataKey",
          "kms:GenerateDataKeyWithoutPlaintext"
        ],
        "Condition": {
          "Null": {
            "kms:EncryptionContext:aws:codecommit:id": "false"
          },
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "kms:ViaService": [
              "codecommit.*.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}",
        "Sid": "CodeCommitKmsPermissions"
      },
      {
        "Action": [
          "codewhisperer:GenerateRecommendations"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowCodeWhispererGenerateRecommendations"
      },
      {
        "Action": [
          "ec2:CreateNetworkInterface"
        ],
        "Condition": {
          "Null": {
            "aws:TagKeys": "true"
          },
          "StringEquals": {
            "glue:RoleAssumedBy": "glue.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ec2:*:*:network-interface/*",
        "Sid": "AllowGlueCreateEni"
      },
      {
        "Action": [
          "ec2:CreateNetworkInterface"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
            "glue:RoleAssumedBy": "glue.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ec2:*:*:security-group/*",
        "Sid": "AllowGlueCreateEniOnSecurityGroup"
      },
      {
        "Action": [
          "ec2:CreateNetworkInterface"
        ],
        "Condition": {
          "StringEquals": {
            "glue:RoleAssumedBy": "glue.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ec2:*:*:subnet/*",
        "Sid": "AllowGlueCreateEniOnSubnet"
      },
      {
        "Action": [
          "ec2:DeleteNetworkInterface",
          "ec2:AttachNetworkInterface"
        ],
        "Condition": {
          "Null": {
            "aws:ResourceTag/aws-glue-service-resource": "false"
          },
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "glue:RoleAssumedBy": "glue.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ec2:*:*:network-interface/*",
        "Sid": "AllowManageGlueEni"
      },
      {
        "Action": [
          "ec2:AttachNetworkInterface"
        ],
        "Condition": {
          "StringEquals": {
            "glue:RoleAssumedBy": "glue.amazonaws.com"
          },
          "StringNotEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ec2:*:*:instance/*",
        "Sid": "AllowAttachGlueEniOnInstance"
      },
      {
        "Action": [
          "ec2:DescribeNetworkInterfaces"
        ],
        "Condition": {
          "StringEquals": {
            "glue:RoleAssumedBy": "glue.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowDescribeGlueEni"
      },
      {
        "Action": [
          "secretsmanager:DescribeSecret",
          "secretsmanager:GetSecretValue"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
            "glue:RoleAssumedBy": "glue.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "FederatedDataConnectionGlueSecret"
      },
      {
        "Action": [
          "ec2:DescribeVpcEndpoints",
          "ec2:DescribeSubnets",
          "ec2:DescribeRouteTables",
          "ec2:DescribeSecurityGroups",
          "glue:ListSessions",
          "ec2:DescribeVpcs"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GlueKernelPermissions"
      },
      {
        "Action": [
          "glue:CreateSession",
          "glue:CreateBlueprint",
          "glue:CreateJob",
          "glue:CreateDataQualityRuleset",
          "glue:CreateWorkflow",
          "glue:TagResource"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "aws:TagKeys": [
              "AmazonDataZone*",
              "ProjectUserTag*"
            ]
          },
          "Null": {
            "aws:TagKeys": "false"
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:session/*",
          "arn:aws:glue:*:*:blueprint/*",
          "arn:aws:glue:*:*:job/*",
          "arn:aws:glue:*:*:dataQualityRuleset/*",
          "arn:aws:glue:*:*:workflow/*"
        ],
        "Sid": "GlueCreateAndTagPermissions"
      },
      {
        "Action": [
          "glue:TagResource",
          "glue:UntagResource"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "aws:TagKeys": [
              "ProjectUserTag*"
            ]
          },
          "ForAllValues:StringNotLike": {
            "aws:TagKeys": [
              "AmazonDataZone*"
            ]
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:session/*",
          "arn:aws:glue:*:*:blueprint/*",
          "arn:aws:glue:*:*:job/*",
          "arn:aws:glue:*:*:dataQualityRuleset/*",
          "arn:aws:glue:*:*:workflow/*"
        ],
        "Sid": "GlueTagSessionPermissions"
      },
      {
        "Action": [
          "glue:CancelStatement",
          "glue:GetSession",
          "glue:ListStatements",
          "glue:DeleteSession",
          "glue:RunStatement",
          "glue:GetStatement",
          "glue:StopSession",
          "glue:GetDashboardUrl",
          "glue:NotifyEvent",
          "glue:StartBlueprintRun",
          "glue:PutWorkflowRunProperties",
          "glue:DeleteJob",
          "glue:DeleteWorkflow",
          "glue:DeleteBlueprint",
          "glue:UpdateWorkflow",
          "glue:UpdateJob",
          "glue:StartWorkflowRun",
          "glue:ResumeWorkflowRun",
          "glue:UpdateBlueprint",
          "glue:BatchStopJobRun",
          "glue:StopWorkflowRun",
          "glue:StartJobRun",
          "glue:CancelDataQualityRuleRecommendationRun",
          "glue:CancelDataQualityRulesetEvaluationRun",
          "glue:DeleteDataQualityRuleset",
          "glue:GetDataQualityModel",
          "glue:GetDataQualityModelResult",
          "glue:GetDataQualityResult",
          "glue:GetDataQualityRuleRecommendationRun",
          "glue:GetDataQualityRuleset",
          "glue:GetDataQualityRulesetEvaluationRun",
          "glue:ListDataQualityResults",
          "glue:ListDataQualityRuleRecommendationRuns",
          "glue:ListDataQualityRulesetEvaluationRuns",
          "glue:ListDataQualityRulesets",
          "glue:PublishDataQuality",
          "glue:PutDataQualityProfileAnnotation",
          "glue:PutDataQualityStatisticAnnotation",
          "glue:StartDataQualityRuleRecommendationRun",
          "glue:StartDataQualityRulesetEvaluationRun",
          "glue:UpdateDataQualityRuleset",
          "glue:GetJobRun",
          "glue:GetJobRuns",
          "glue:BatchGetJobs",
          "glue:GetJob"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:session/*",
          "arn:aws:glue:*:*:blueprint/*",
          "arn:aws:glue:*:*:job/*",
          "arn:aws:glue:*:*:dataQualityRuleset/*",
          "arn:aws:glue:*:*:workflow/*"
        ],
        "Sid": "GluePermissions"
      },
      {
        "Action": [
          "glue:ListJobs"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GlueListJobsPermissions"
      },
      {
        "Action": [
          "glue:GetGeneratedCode"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GlueVisualETLPermissions"
      },
      {
        "Action": [
          "glue:StartCompletion",
          "glue:GetCompletion"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:completion/*",
          "arn:aws:glue:*:*:job/*"
        ],
        "Sid": "GlueCompletionsPermissions"
      },
      {
        "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:*:*:log-group:/aws-glue/*",
        "Sid": "GlueJobRunnerSessionLogPermissions"
      },
      {
        "Action": [
          "ec2:DeleteTags",
          "ec2:CreateTags"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "aws:TagKeys": [
              "aws-glue-*"
            ]
          },
          "Null": {
            "aws:TagKeys": "false"
          },
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "glue:RoleAssumedBy": "glue.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:network-interface/*"
        ],
        "Sid": "EC2TagsPermissionsForGlue"
      },
      {
        "Action": [
          "kms:Decrypt",
          "kms:Encrypt",
          "kms:GenerateDataKey"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "kms:EncryptionContext:glue_catalog_id": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "kms:ViaService": [
              "glue.*.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:kms:*:*:key/${aws:PrincipalTag/DefaultGlueCatalogKmsKeyId}",
          "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}"
        ],
        "Sid": "GlueKmsPermissions"
      },
      {
        "Action": [
          "emr-serverless:AccessInteractiveEndpoints",
          "emr-serverless:AccessLivyEndpoints",
          "emr-serverless:GetApplication",
          "emr-serverless:StartApplication",
          "emr-serverless:StopApplication"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:emr-serverless:*:*:/applications/*",
        "Sid": "EmrServerlessInteractivePermissions"
      },
      {
        "Action": [
          "emr-serverless:GetDashboardForJobRun",
          "emr-serverless:GetJobRun"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:emr-serverless:*:*:/applications/*/jobruns/*"
        ],
        "Sid": "EmrServerlessJobAccessPermissions"
      },
      {
        "Action": [
          "airflow:GetEnvironment",
          "airflow:UpdateEnvironment"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AirflowActionsForTaggedEnvironments"
      },
      {
        "Action": [
          "airflow:ListEnvironments"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AirflowListEnvironments"
      },
      {
        "Action": [
          "airflow:CreateWebLoginToken",
          "airflow:InvokeRestApi"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:airflow:*:*:role/DataZoneMWAAEnv-${aws:PrincipalTag/AmazonDataZoneDomain}-${aws:PrincipalTag/AmazonDataZoneProject}-${aws:PrincipalTag/AmazonDataZoneScopeName}/User"
        ],
        "Sid": "AirflowUiApiAccess"
      },
      {
        "Action": [
          "logs:CreateLogStream",
          "logs:CreateLogGroup",
          "logs:PutLogEvents",
          "logs:GetLogEvents",
          "logs:GetLogRecord",
          "logs:GetLogGroupFields",
          "logs:GetQueryResults"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:logs:*:*:log-group:airflow-DataZoneMWAAEnv-${aws:PrincipalTag/AmazonDataZoneDomain}-${aws:PrincipalTag/AmazonDataZoneProject}-${aws:PrincipalTag/AmazonDataZoneScopeName}-*"
        ],
        "Sid": "AirflowCloudwatchLogsActions"
      },
      {
        "Action": [
          "cloudwatch:PutMetricData"
        ],
        "Condition": {
          "StringLike": {
            "cloudwatch:namespace": "AmazonMWAA"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AirflowCloudwatchActions"
      },
      {
        "Action": [
          "cloudwatch:PutMetricData"
        ],
        "Condition": {
          "StringLike": {
            "cloudwatch:namespace": [
              "Glue",
              "AWS/Glue"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GlueJobCloudwatchPutMetricActions"
      },
      {
        "Action": [
          "s3:GetAccountPublicAccessBlock"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AirflowS3GetAccountPublicAccessBlock"
      },
      {
        "Action": [
          "sqs:ChangeMessageVisibility",
          "sqs:DeleteMessage",
          "sqs:GetQueueAttributes",
          "sqs:GetQueueUrl",
          "sqs:ReceiveMessage",
          "sqs:SendMessage"
        ],
        "Condition": {
          "StringNotEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:sqs:*:*:airflow-celery-*"
        ],
        "Sid": "AirflowSqsActions"
      },
      {
        "Action": [
          "s3:GetEncryptionConfiguration",
          "s3:GetBucketPublicAccessBlock"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}",
        "Sid": "AirflowS3BucketActions"
      },
      {
        "Action": [
          "s3:GetBucketLocation"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "DataLakeS3BucketActions"
      },
      {
        "Action": [
          "s3:GetObject*",
          "s3:ListMultipartUploadParts",
          "s3:ListBucket"
        ],
        "Condition": {
          "StringNotEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "DataLakeCrossAccountS3Permissions"
      },
      {
        "Action": [
          "kms:ListGrants",
          "kms:GetPublicKey",
          "kms:DescribeKey"
        ],
        "Condition": {
          "StringLike": {
            "kms:ViaService": "s3.*.amazonaws.com"
          },
          "StringNotEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "DataLakeCrossAccountKMSPermissions"
      },
      {
        "Action": [
          "kms:Decrypt"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "kms:EncryptionContextKeys": "aws:s3:arn"
          },
          "StringLike": {
            "kms:ViaService": "s3.*.amazonaws.com"
          },
          "StringNotEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "DataLakeCrossAccountDecryptKMSPermissions"
      },
      {
        "Action": [
          "s3:ListBucket",
          "s3:ListBucketVersions"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "s3:prefix": [
              "${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}",
              "${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}/*"
            ]
          },
          "StringNotEquals": {
            "aws:PrincipalTag/AmazonDataZoneDomain": "",
            "aws:PrincipalTag/AmazonDataZoneProject": "",
            "aws:PrincipalTag/DomainBucketName": ""
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}",
        "Sid": "ListDomainS3BucketPermissions"
      },
      {
        "Action": [
          "s3:ListBucket"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringNotEquals": {
            "aws:PrincipalTag/DomainBucketName": ""
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}",
        "Sid": "AirflowListDomainS3BucketPermissions"
      },
      {
        "Action": [
          "s3:ListBucket"
        ],
        "Condition": {
          "ArnEquals": {
            "lambda:SourceFunctionArn": "arn:aws:lambda:*:*:function:athenafederatedcatalog_*"
          },
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}"
        ],
        "Sid": "ListDomainBucketFromAthenaFederatedCatalog"
      },
      {
        "Action": [
          "s3:GetObject*",
          "s3:PutObject",
          "s3:PutObjectRetention",
          "s3:RestoreObject",
          "s3:ReplicateObject",
          "s3:DeleteObject",
          "s3:DeleteObjectVersion",
          "s3:ListMultipartUploadParts",
          "s3:AbortMultipartUpload"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringNotEquals": {
            "aws:PrincipalTag/AmazonDataZoneDomain": "",
            "aws:PrincipalTag/AmazonDataZoneProject": "",
            "aws:PrincipalTag/DomainBucketName": ""
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}/${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}/*",
        "Sid": "AccessDomainS3BucketPermissions"
      },
      {
        "Action": [
          "s3:GetBucketAcl"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}",
        "Sid": "AccessLevelControlS3BucketPermissions"
      },
      {
        "Action": [
          "s3:PutObjectTagging"
        ],
        "Condition": {
          "ForAllValues:StringEquals": {
            "s3:RequestObjectTagKeys": [
              "BasicValidationStatus",
              "ContainsReferenceResponseForAllPrompts"
            ]
          },
          "StringEquals": {
            "s3:RequestObjectTag/BasicValidationStatus": [
              "valid",
              "invalid"
            ],
            "s3:RequestObjectTag/ContainsReferenceResponseForAllPrompts": [
              "true",
              "false"
            ]
          },
          "StringNotEquals": {
            "aws:PrincipalTag/AmazonDataZoneDomain": "",
            "aws:PrincipalTag/AmazonDataZoneProject": "",
            "aws:PrincipalTag/DomainBucketName": ""
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}/${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}/genAI/assets/evaluations/*",
        "Sid": "TagS3ObjectPermissionsForBedrockEvaluation"
      },
      {
        "Action": [
          "kms:GenerateDataKey",
          "kms:Decrypt"
        ],
        "Condition": {
          "ArnLike": {
            "kms:EncryptionContext:aws:s3:arn": [
              "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}",
              "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}/*"
            ]
          },
          "StringLike": {
            "kms:ViaService": "s3.*.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}",
        "Sid": "AccessDomainS3BucketKmsPermissions"
      },
      {
        "Action": [
          "kms:GenerateDataKey",
          "kms:Decrypt"
        ],
        "Condition": {
          "StringEquals": {
            "kms:EncryptionContext:aws:datazone:domainId": "${aws:PrincipalTag/AmazonDataZoneDomain}",
            "kms:ViaService": [
              "datazone.*.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/DomainKmsKeyId}",
        "Sid": "DZDomainKMSKeyXAcctPerm"
      },
      {
        "Action": [
          "logs:DescribeLogGroups"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "ListLogGroupsPermissions"
      },
      {
        "Action": [
          "logs:DescribeLogStreams",
          "logs:StartQuery",
          "logs:GetLogEvents",
          "logs:GetLogRecord",
          "logs:GetLogGroupFields",
          "logs:GetQueryResults",
          "logs:PutLogEvents",
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:FilterLogEvents"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}/output",
          "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}/error",
          "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}/output:log-stream:*",
          "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}/error:log-stream:*"
        ],
        "Sid": "GlueJobLogGroupPermissions"
      },
      {
        "Action": [
          "logs:DescribeLogStreams",
          "logs:StartQuery",
          "logs:GetLogEvents",
          "logs:GetLogRecord",
          "logs:GetLogGroupFields",
          "logs:GetQueryResults",
          "logs:PutLogEvents",
          "logs:CreateLogStream",
          "logs:FilterLogEvents"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}",
          "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}:log-stream:*"
        ],
        "Sid": "ProjectLogGroupPermissions"
      },
      {
        "Action": [
          "logs:StopQuery"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "CloudWatchStopQuery"
      },
      {
        "Action": [
          "athena:TerminateSession",
          "athena:CreatePreparedStatement",
          "athena:StopCalculationExecution",
          "athena:StartQueryExecution",
          "athena:UpdatePreparedStatement",
          "athena:BatchGetNamedQuery",
          "athena:BatchGetPreparedStatement",
          "athena:BatchGetQueryExecution",
          "athena:UpdateNotebook",
          "athena:DeleteNotebook",
          "athena:DeletePreparedStatement",
          "athena:UpdateNotebookMetadata",
          "athena:DeleteNamedQuery",
          "athena:GetCalculationExecution",
          "athena:GetCalculationExecutionCode",
          "athena:GetCalculationExecutionStatus",
          "athena:GetNamedQuery",
          "athena:GetNotebookMetadata",
          "athena:GetPreparedStatement",
          "athena:GetQueryExecution",
          "athena:GetQueryResults",
          "athena:GetQueryResultsStream",
          "athena:GetQueryRuntimeStatistics",
          "athena:GetSession",
          "athena:GetSessionStatus",
          "athena:GetWorkGroup",
          "athena:UpdateNamedQuery",
          "athena:CreateNamedQuery",
          "athena:ExportNotebook",
          "athena:StopQueryExecution",
          "athena:StartCalculationExecution",
          "athena:StartSession",
          "athena:CreatePresignedNotebookUrl",
          "athena:CreateNotebook",
          "athena:ImportNotebook",
          "athena:ListQueryExecutions",
          "athena:ListTagsForResource",
          "athena:ListNamedQueries",
          "athena:ListPreparedStatements"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "DataLakeAthenaPermissions"
      },
      {
        "Action": [
          "athena:GetDatabase",
          "athena:GetDataCatalog",
          "athena:GetTableMetadata",
          "athena:ListDatabases",
          "athena:ListTableMetadata"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:athena:*:*:datacatalog/AwsDataCatalog",
          "arn:aws:athena:*:*:datacatalog/awsdatacatalog"
        ],
        "Sid": "DefaultAthenaDataCatalogPermissions"
      },
      {
        "Action": [
          "athena:ListDataCatalogs",
          "athena:ListEngineVersions",
          "athena:ListWorkGroups"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AthenaListPermissions"
      },
      {
        "Action": [
          "datazone:CreateConnection",
          "datazone:DeleteConnection",
          "datazone:GetConnection",
          "datazone:GetDomain",
          "datazone:GetDomainExecutionRoleCredentials",
          "datazone:GetEnvironment",
          "datazone:GetEnvironmentBlueprintConfiguration",
          "datazone:GetProject",
          "datazone:GetUserProfile",
          "datazone:ListConnections",
          "datazone:ListEnvironments",
          "datazone:ListEnvironmentBlueprints",
          "datazone:ListProjects",
          "datazone:UpdateConnection",
          "datazone:PostLineageEvent"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:datazone:*:*:domain/${aws:PrincipalTag/AmazonDataZoneDomain}",
        "Sid": "DataZoneUserPermissions"
      },
      {
        "Action": [
          "glue:GetDatabase"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:catalog",
          "arn:aws:glue:*:*:database/default"
        ],
        "Sid": "GlueGetDefaultDatabase"
      },
      {
        "Action": [
          "glue:GetDatabases"
        ],
        "Condition": {
          "StringEquals": {
            "glue:LakeFormationPermissions": "Enabled"
          }
        },
        "Effect": "Allow",
        "NotResource": "arn:aws:glue:*:*:database/default",
        "Sid": "AllowGlueGetDatabasesExceptDefault"
      },
      {
        "Action": [
          "glue:GetDatabases"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:glue:*:*:catalog",
        "Sid": "GlueListDatabasesOnNoDatabases"
      },
      {
        "Action": [
          "glue:GetClassifier",
          "glue:GetClassifiers",
          "glue:UseGlueStudio"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GlueFileUploadPermissions"
      },
      {
        "Action": [
          "glue:PassConnection",
          "glue:GetConnection",
          "glue:GetConnections"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GlueProjectConnectionPermissions"
      },
      {
        "Action": [
          "glue:GetConnection",
          "glue:GetConnections"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:glue:*:*:catalog",
        "Sid": "GlueGetConnectionOnlyOnCatalog"
      },
      {
        "Action": [
          "glue:CreateTable",
          "glue:DeleteTable",
          "glue:BatchDeleteTable",
          "glue:UpdateTable",
          "glue:BatchCreatePartition",
          "glue:CreatePartition",
          "glue:DeletePartition",
          "glue:BatchDeletePartition",
          "glue:UpdatePartition",
          "glue:BatchGetPartition",
          "glue:BatchGetTableOptimizer",
          "glue:GetCatalogImportStatus",
          "glue:GetColumnStatisticsForPartition",
          "glue:GetColumnStatisticsForTable",
          "glue:GetColumnStatisticsTaskRun",
          "glue:GetColumnStatisticsTaskRuns",
          "glue:GetDatabase",
          "glue:DeleteDatabase",
          "glue:GetPartition",
          "glue:GetPartitionIndexes",
          "glue:GetPartitions",
          "glue:GetTable",
          "glue:GetTableOptimizer",
          "glue:GetTableVersion",
          "glue:GetTableVersions",
          "glue:GetTables",
          "glue:SearchTables",
          "glue:ListTableOptimizerRuns",
          "glue:CreatePartitionIndex",
          "glue:BatchUpdatePartition",
          "glue:DeleteTableVersion",
          "glue:DeleteColumnStatisticsForPartition",
          "glue:DeleteColumnStatisticsForTable",
          "glue:DeletePartitionIndex",
          "glue:UpdateColumnStatisticsForPartition",
          "glue:UpdateColumnStatisticsForTable",
          "glue:BatchDeleteTableVersion",
          "glue:GetCatalogs",
          "glue:GetCatalog"
        ],
        "Condition": {
          "StringEquals": {
            "glue:LakeFormationPermissions": "Enabled"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GlueDatalakePermissions"
      },
      {
        "Action": [
          "glue:ListCrawls"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:glue:*:*:crawler/*",
        "Sid": "GlueCrawlerPermissions"
      },
      {
        "Action": [
          "glue:CreateDatabase",
          "glue:DeleteDatabase",
          "glue:GetDatabase"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:database/global_temp",
          "arn:aws:glue:*:*:catalog"
        ],
        "Sid": "GlueGlobalTempDatabasePermissions"
      },
      {
        "Action": [
          "glue:GetCatalog",
          "glue:UpdateCatalog"
        ],
        "Condition": {
          "StringEquals": {
            "glue:LakeFormationPermissions": "Enabled"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:catalog"
        ],
        "Sid": "GlueDefaultCatalogsPermissions"
      },
      {
        "Action": [
          "glue:GetCatalog",
          "glue:UpdateCatalog"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
            "glue:LakeFormationPermissions": "Enabled"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:catalog/*"
        ],
        "Sid": "GlueNonDefaultCatalogsPermissions"
      },
      {
        "Action": [
          "glue:CreateDatabase",
          "glue:DeleteDatabase",
          "glue:GetDatabase"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:database/*",
          "arn:aws:glue:*:*:catalog/*"
        ],
        "Sid": "GlueCatalogDatabasePermissions"
      },
      {
        "Action": [
          "lakeformation:GetDataAccess"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "LakeFormationPermissionForDataLakeAccess"
      },
      {
        "Action": [
          "iam:ListRoles"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "IAMListRoles"
      },
      {
        "Action": [
          "iam:GetRole"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "IAMGetRole"
      },
      {
        "Action": [
          "sts:AssumeRole"
        ],
        "Condition": {
          "StringNotEquals": {
            "aws:PrincipalTag/AmazonDataZoneProject": ""
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowAssumeAccessRole"
      },
      {
        "Action": [
          "sts:SetSourceIdentity"
        ],
        "Condition": {
          "StringLike": {
            "sts:SourceIdentity": "${aws:PrincipalTag/datazone:userId}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "SetSourceIdentityForAssumeAccessRole"
      },
      {
        "Action": [
          "sts:TagSession"
        ],
        "Condition": {
          "ForAllValues:StringEquals": {
            "aws:TagKeys": [
              "AmazonDataZoneProject",
              "AmazonDataZoneDomain"
            ]
          },
          "StringEquals": {
            "aws:RequestTag/AmazonDataZoneDomain": "${aws:PrincipalTag/AmazonDataZoneDomain}",
            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "TagSessionForAssumeAccessRole"
      },
      {
        "Action": [
          "sts:SetContext"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "sqlworkbench.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:sts::*:self"
        ],
        "Sid": "SetContextForTrustedIdentityPropagation"
      },
      {
        "Action": [
          "sts:SetContext"
        ],
        "Condition": {
          "ForAllValues:ArnEquals": {
            "sts:RequestContextProviders": [
              "arn:aws:iam::aws:contextProvider/IdentityCenter"
            ]
          },
          "Null": {
            "sts:RequestContextProviders": "false"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "StsContext"
      },
      {
        "Action": [
          "glue:GetConnection",
          "glue:GetConnections",
          "glue:GetTags"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "FederatedDataConnectionPermissions"
      },
      {
        "Action": [
          "glue:ListConnectionTypes",
          "glue:DescribeConnectionType"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "UnRestrictedAccessForGlueEntities"
      },
      {
        "Action": [
          "glue:ListEntities",
          "glue:DescribeEntity",
          "glue:GetEntityRecords"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GlueEntitiesAccessForFederatedDatabase"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "iam:PassedToService": [
              "sagemaker.amazonaws.com",
              "glue.amazonaws.com",
              "airflow.amazonaws.com",
              "emr-serverless.amazonaws.com",
              "scheduler.amazonaws.com",
              "access-grants.s3.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/${aws:PrincipalTag/RoleName}",
        "Sid": "AllowPassRoleOnProjectRoles"
      },
      {
        "Action": [
          "sqlworkbench:PutTab",
          "sqlworkbench:DeleteTab",
          "sqlworkbench:DriverExecute",
          "sqlworkbench:GetUserInfo",
          "sqlworkbench:ListTabs",
          "sqlworkbench:GetAutocompletionMetadata",
          "sqlworkbench:GetAutocompletionResource",
          "sqlworkbench:PassAccountSettings",
          "sqlworkbench:ListQueryExecutionHistory",
          "sqlworkbench:GetQueryExecutionHistory",
          "sqlworkbench:CreateConnection",
          "sqlworkbench:PutQCustomContext",
          "sqlworkbench:GetQCustomContext",
          "sqlworkbench:DeleteQCustomContext",
          "sqlworkbench:GetQSqlRecommendations",
          "sqlworkbench:GetQSqlPromptQuotas",
          "sqlworkbench:GetSchemaInference"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "SQLWorkBenchActionsWithoutResourceType"
      },
      {
        "Action": [
          "redshift-data:DescribeStatement",
          "redshift-data:GetStatementResult",
          "redshift-data:CancelStatement",
          "redshift-data:ListStatements"
        ],
        "Condition": {
          "StringEquals": {
            "redshift-data:statement-owner-iam-userid": "${aws:userid}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "RedshiftDataActionsIAMSessionRestriction"
      },
      {
        "Action": [
          "redshift-data:BatchExecuteStatement",
          "redshift-data:ExecuteStatement",
          "redshift-data:DescribeTable",
          "redshift-data:ListDatabases",
          "redshift-data:ListSchemas",
          "redshift-data:ListTables"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "RedshiftDataActionsForResources"
      },
      {
        "Action": [
          "redshift-serverless:GetWorkgroup",
          "redshift-serverless:GetNamespace",
          "redshift-serverless:ListTagsForResource",
          "redshift-serverless:GetCredentials",
          "redshift:DescribeTags",
          "redshift:GetClusterCredentialsWithIAM",
          "redshift-data:BatchExecuteStatement",
          "redshift-data:ExecuteStatement",
          "redshift-data:DescribeTable",
          "redshift-data:ListDatabases",
          "redshift-data:ListSchemas",
          "redshift-data:ListTables"
        ],
        "Condition": {
          "Null": {
            "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
          },
          "StringEquals": {
            "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowAccessExistingRedshiftCompute"
      },
      {
        "Action": [
          "redshift-serverless:ListNamespaces",
          "redshift-serverless:ListWorkgroups",
          "redshift:DescribeClusters"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "RedshiftWithoutResourceType"
      },
      {
        "Action": [
          "redshift-serverless:GetWorkgroup",
          "redshift-serverless:ListTagsForResource",
          "redshift-serverless:GetNamespace",
          "redshift:DescribeTags"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "RedshiftServerlessWorkgroupWithResourceType"
      },
      {
        "Action": [
          "redshift:GetClusterCredentialsWithIAM"
        ],
        "Condition": {
          "Bool": {
            "aws:ViaAWSService": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:redshift:*:*:dbname:*/*",
        "Sid": "RedshiftExistingComputeConnectToCatalog"
      },
      {
        "Action": [
          "secretsmanager:ListSecrets"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowListSecrets"
      },
      {
        "Action": [
          "redshift-serverless:GetCredentials",
          "redshift:GetClusterCredentialsWithIAM"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "RedshiftGetCredentials"
      },
      {
        "Action": [
          "redshift-data:BatchExecuteStatement",
          "redshift-data:ExecuteStatement",
          "redshift-data:DescribeStatement",
          "redshift-data:GetStatementResult",
          "redshift-data:CancelStatement",
          "redshift-data:GetStagingBucketLocation",
          "redshift-serverless:GetManagedWorkgroup"
        ],
        "Condition": {
          "StringLike": {
            "redshift-data:glue-catalog-arn": "arn:aws:glue:*:*:catalog/*"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "RedshiftDataActionsForManagedWorkgroup"
      },
      {
        "Action": [
          "redshift-serverless:GetCredentials"
        ],
        "Condition": {
          "Bool": {
            "aws:ViaAWSService": "true"
          },
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "redshift-data.amazonaws.com",
              "sqlworkbench.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:redshift-serverless:*:*:workgroup/*",
        "Sid": "RedshifServerlessCredentialsForManagedWorkgroup"
      },
      {
        "Action": [
          "tag:GetResources"
        ],
        "Condition": {
          "StringEquals": {
            "aws:CalledViaLast": "sqlworkbench.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowTagGetResources"
      },
      {
        "Action": [
          "secretsmanager:GetSecretValue"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:secretsmanager:*:*:secret:*",
        "Sid": "AllowGetSecretForRedShift"
      },
      {
        "Action": [
          "cloudwatch:GetMetricData",
          "cloudwatch:GetMetricStatistics"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "CloudWatchMetricsPermissions"
      },
      {
        "Action": [
          "q:StartConversation",
          "q:SendMessage"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AmazonQChatPermissions"
      },
      {
        "Action": [
          "elasticmapreduce:DescribeCluster",
          "elasticmapreduce:ListInstances",
          "elasticmapreduce:ListInstanceFleets",
          "elasticmapreduce:ListInstanceGroups",
          "elasticmapreduce:ListBootstrapActions",
          "elasticmapreduce:GetManagedScalingPolicy",
          "elasticmapreduce:GetOnClusterAppUIPresignedURL"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:elasticmapreduce:*:*:cluster/*"
        ],
        "Sid": "EMRClusterWithDataZoneTags"
      },
      {
        "Action": [
          "elasticmapreduce:ListReleaseLabels",
          "elasticmapreduce:ListSupportedInstanceTypes",
          "elasticmapreduce:ListClusters",
          "elasticmapreduce:CreatePersistentAppUI",
          "elasticmapreduce:DescribePersistentAppUI",
          "pricing:GetProducts"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "EMRClusterInfoPermissions"
      },
      {
        "Action": [
          "elasticmapreduce:GetClusterSessionCredentials"
        ],
        "Condition": {
          "ArnLike": {
            "elasticmapreduce:ExecutionRoleArn": "arn:aws:iam::*:role/${aws:PrincipalTag/RoleName}"
          },
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:elasticmapreduce:*:*:cluster/*"
        ],
        "Sid": "EMRGetClusterSessionCredentials"
      },
      {
        "Action": [
          "elasticmapreduce:GetPersistentAppUIPresignedURL"
        ],
        "Condition": {
          "ArnLike": {
            "elasticmapreduce:ExecutionRoleArn": "arn:aws:iam::*:role/${aws:PrincipalTag/RoleName}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "EMRPersistentAppUI"
      },
      {
        "Action": [
          "kms:CreateGrant",
          "kms:ReEncryptFrom",
          "kms:ReEncryptTo",
          "kms:Decrypt",
          "kms:Encrypt",
          "kms:GenerateDataKey",
          "kms:GenerateDataKeyWithoutPlaintext"
        ],
        "Condition": {
          "Null": {
            "kms:EncryptionContextKeys": "false"
          },
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "kms:ViaService": [
              "sqs.*.amazonaws.com",
              "sagemaker.*.amazonaws.com",
              "bedrock.*.amazonaws.com",
              "s3.*.amazonaws.com",
              "scheduler.*.amazonaws.com",
              "glue.*.amazonaws.com",
              "secretsmanager.*.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}",
        "Sid": "KmsWithEncryptPermissions"
      },
      {
        "Action": [
          "kms:CreateGrant",
          "kms:ReEncryptFrom",
          "kms:ReEncryptTo",
          "kms:Decrypt",
          "kms:GenerateDataKey",
          "kms:GenerateDataKeyWithoutPlaintext"
        ],
        "Condition": {
          "Null": {
            "kms:EncryptionContextKeys": "false"
          },
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "kms:ViaService": [
              "emr-serverless.*.amazonaws.com",
              "redshift.*.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}",
        "Sid": "KmsPermissions"
      },
      {
        "Action": [
          "kms:ListGrants",
          "kms:RevokeGrant",
          "kms:DescribeKey"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "kms:ViaService": [
              "sqs.*.amazonaws.com",
              "sagemaker.*.amazonaws.com",
              "emr-serverless.*.amazonaws.com",
              "s3.*.amazonaws.com",
              "redshift.*.amazonaws.com",
              "codecommit.*.amazonaws.com",
              "scheduler.*.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}",
        "Sid": "KmsManagementPermissions"
      },
      {
        "Action": [
          "kms:CreateGrant",
          "kms:Decrypt",
          "kms:Encrypt",
          "kms:GenerateDataKey",
          "kms:GenerateDataKeyWithoutPlaintext"
        ],
        "Condition": {
          "Null": {
            "kms:EncryptionContextKeys": "false"
          },
          "StringLike": {
            "kms:ViaService": [
              "s3.*.amazonaws.com",
              "sqs.*.amazonaws.com",
              "sagemaker.*.amazonaws.com"
            ]
          },
          "StringNotEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:kms:*:*:key/*"
        ],
        "Sid": "AwsOwnedKmsKeyPermissions"
      },
      {
        "Action": [
          "kms:DescribeKey"
        ],
        "Condition": {
          "StringLike": {
            "kms:ViaService": [
              "sqs.*.amazonaws.com",
              "sagemaker.*.amazonaws.com"
            ]
          },
          "StringNotEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:kms:*:*:key/*"
        ],
        "Sid": "AwsOwnedKmsManagementPermissions"
      },
      {
        "Action": [
          "kms:ListAliases"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "ListKMSPermissions"
      },
      {
        "Action": [
          "ec2:DescribeInstanceTypes"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "EC2PermissionsForNotebookExecution"
      },
      {
        "Action": [
          "bedrock:InvokeModel",
          "bedrock:InvokeModelWithResponseStream"
        ],
        "Condition": {
          "Null": {
            "bedrock:InferenceProfileArn": "false"
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:bedrock:*::foundation-model/*",
          "arn:aws:bedrock:*:*:custom-model/*",
          "arn:aws:bedrock:*:*:provisioned-model/*"
        ],
        "Sid": "InvokeBedrockModelPermissions"
      },
      {
        "Action": [
          "bedrock:InvokeModel",
          "bedrock:InvokeModelWithResponseStream"
        ],
        "Condition": {
          "ArnLike": {
            "bedrock:InferenceProfileArn": "arn:aws:bedrock:*:*:application-inference-profile/*"
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:bedrock:*::foundation-model/*",
          "arn:aws:bedrock:*:*:custom-model/*",
          "arn:aws:bedrock:*:*:provisioned-model/*"
        ],
        "Sid": "BedrockInvokeModelPermissions"
      },
      {
        "Action": [
          "bedrock:GetInferenceProfile",
          "bedrock:InvokeModel",
          "bedrock:InvokeModelWithResponseStream"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:bedrock:*:*:application-inference-profile/*",
        "Sid": "InvokeBedrockModelAppInferenceProfilePermissions"
      },
      {
        "Action": [
          "bedrock:GetInferenceProfile",
          "bedrock:InvokeModel",
          "bedrock:InvokeModelWithResponseStream"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:bedrock:*:*:application-inference-profile/*",
        "Sid": "BedrockInvokeModelAppInferenceProfilePermissions"
      },
      {
        "Action": [
          "bedrock:InvokeAgent",
          "bedrock:Retrieve",
          "bedrock:ListIngestionJobs",
          "bedrock:StartIngestionJob",
          "bedrock:GetIngestionJob",
          "bedrock:ApplyGuardrail",
          "bedrock:ListPrompts",
          "bedrock:GetPrompt",
          "bedrock:CreatePrompt",
          "bedrock:DeletePrompt",
          "bedrock:CreatePromptVersion",
          "bedrock:InvokeFlow",
          "bedrock:GetEvaluationJob",
          "bedrock:CreateEvaluationJob",
          "bedrock:StopEvaluationJob",
          "bedrock:BatchDeleteEvaluationJob",
          "bedrock:ListTagsForResource",
          "bedrock:CreateAgentAlias",
          "bedrock:ListAgentAliases",
          "bedrock:GetAgentVersion",
          "bedrock:ListAgentVersions",
          "bedrock:DeleteAgentVersion",
          "bedrock:DeleteAgentAlias",
          "bedrock:GetAgentAlias",
          "bedrock:UpdateAgentAlias"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AccessBedrockResourcePermissions"
      },
      {
        "Action": [
          "bedrock:ApplyGuardrail",
          "bedrock:BatchDeleteEvaluationJob",
          "bedrock:CreateAgentAlias",
          "bedrock:CreateBlueprint",
          "bedrock:CreateBlueprintVersion",
          "bedrock:CreateDataAutomationProject",
          "bedrock:CreateEvaluationJob",
          "bedrock:CreatePrompt",
          "bedrock:CreatePromptVersion",
          "bedrock:DeleteAgentAlias",
          "bedrock:DeleteAgentVersion",
          "bedrock:DeleteBlueprint",
          "bedrock:DeleteDataAutomationProject",
          "bedrock:DeletePrompt",
          "bedrock:GetAgentAlias",
          "bedrock:GetAgentVersion",
          "bedrock:GetBlueprint",
          "bedrock:GetDataAutomationProject",
          "bedrock:GetDataAutomationStatus",
          "bedrock:GetEvaluationJob",
          "bedrock:GetIngestionJob",
          "bedrock:GetPrompt",
          "bedrock:InvokeAgent",
          "bedrock:InvokeDataAutomationAsync",
          "bedrock:InvokeFlow",
          "bedrock:ListAgentAliases",
          "bedrock:ListAgentVersions",
          "bedrock:ListIngestionJobs",
          "bedrock:ListPrompts",
          "bedrock:ListTagsForResource",
          "bedrock:Retrieve",
          "bedrock:StartIngestionJob",
          "bedrock:StopEvaluationJob",
          "bedrock:UpdateAgentAlias",
          "bedrock:UpdateBlueprint",
          "bedrock:UpdateDataAutomationProject",
          "bedrock:ListAgentActionGroups",
          "bedrock:ListAgentKnowledgeBases"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:bedrock:*:*:*",
        "Sid": "BedrockResourceAccessPermissions"
      },
      {
        "Action": [
          "bedrock:CreateEvaluationJob"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:bedrock:*::foundation-model/*",
          "arn:aws:bedrock:*:*:custom-model/*"
        ],
        "Sid": "CreateEvaluationJobForFoundationModelPermissions"
      },
      {
        "Action": [
          "bedrock:CreateEvaluationJob"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:bedrock:*:*:custom-model/*",
          "arn:aws:bedrock:*::foundation-model/*"
        ],
        "Sid": "BedrockCreateEvaluationJobPermissions"
      },
      {
        "Action": [
          "bedrock:InvokeDataAutomationAsync"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:bedrock:*:*:data-automation-profile/*"
        ],
        "Sid": "InvokeDataAutomationAsyncPermissions"
      },
      {
        "Action": [
          "bedrock:InvokeInlineAgent"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "bedrock:InlineAgentName": "${datazone:userId}"
          },
          "StringNotEquals": {
            "bedrock:InlineAgentName": ""
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "InvokeBedrockInlineAgentPermissions"
      },
      {
        "Action": [
          "bedrock:InvokeInlineAgent"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "bedrock:InlineAgentName": "${datazone:userId}"
          },
          "StringNotEquals": {
            "bedrock:InlineAgentName": ""
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "BedrockInvokeInlineAgentPermissions"
      },
      {
        "Action": [
          "bedrock:RetrieveAndGenerate"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "BedrockRetrieveAndGeneratePermissions"
      },
      {
        "Action": [
          "bedrock:ListEvaluationJobs"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "ListBedrockEvaluationJobPermissions"
      },
      {
        "Action": [
          "bedrock:ListEvaluationJobs",
          "bedrock:RetrieveAndGenerate",
          "bedrock:ListFoundationModels"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "BedrockNoResourcePermissions"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "iam:PassedToService": [
              "bedrock.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/AmazonBedrockEvaluationRole-${aws:PrincipalTag/AmazonDataZoneProject}-*",
          "arn:aws:iam::*:role/AmazonBedrockServiceRole-${aws:PrincipalTag/AmazonDataZoneProject}-*"
        ],
        "Sid": "PassRoleToBedrockEvaluation"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "iam:PassedToService": "bedrock.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/AmazonBedrockEvaluationRole-${aws:PrincipalTag/AmazonDataZoneProject}-*",
          "arn:aws:iam::*:role/AmazonBedrockServiceRole-${aws:PrincipalTag/AmazonDataZoneProject}-*"
        ],
        "Sid": "IamPassRoleToBedrockPermissions"
      },
      {
        "Action": [
          "bedrock:TagResource"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "aws:TagKeys": [
              "AmazonDataZone*",
              "AmazonBedrockManaged",
              "ProjectUserTag*"
            ]
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "TagBedrockResourcePermissions"
      },
      {
        "Action": [
          "bedrock:TagResource"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "aws:TagKeys": [
              "AmazonBedrockManaged",
              "AmazonDataZone*",
              "ProjectUserTag*"
            ]
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          },
          "StringEqualsIfExists": {
            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:bedrock:*:*:*",
        "Sid": "BedrockTagResourcePermissions"
      },
      {
        "Action": [
          "kms:GenerateDataKey",
          "kms:Decrypt"
        ],
        "Condition": {
          "Null": {
            "kms:EncryptionContext:aws:bedrock:arn": "false"
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "kms:ViaService": "bedrock.*.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}",
        "Sid": "BedrockKmsPermissions"
      },
      {
        "Action": [
          "kms:Decrypt",
          "kms:GenerateDataKey"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "kms:EncryptionContextKeys": [
              "aws:bedrock*:arn",
              "aws:bedrock:guardrail-id"
            ]
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "kms:ViaService": "bedrock.*.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}",
        "Sid": "KmsViaBedrockPermissions"
      },
      {
        "Action": [
          "secretsmanager:DescribeSecret",
          "secretsmanager:PutSecretValue"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock-ide/*",
        "Sid": "AccessSecretPermissionsForAmazonBedrockIDE"
      },
      {
        "Action": [
          "secretsmanager:DescribeSecret",
          "secretsmanager:PutSecretValue"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock*",
        "Sid": "SecretsManagerPermissionsForBedrock"
      },
      {
        "Action": [
          "kms:GenerateDataKey",
          "kms:Decrypt"
        ],
        "Condition": {
          "ArnLike": {
            "kms:EncryptionContext:SecretARN": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock-ide/*"
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "kms:ViaService": "secretsmanager.*.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}",
        "Sid": "AccessSecretKmsPermissionsForAmazonBedrockIDE"
      },
      {
        "Action": [
          "kms:Decrypt",
          "kms:GenerateDataKey"
        ],
        "Condition": {
          "ArnLike": {
            "kms:EncryptionContext:SecretARN": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock*"
          },
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          },
          "StringLike": {
            "kms:ViaService": "secretsmanager.*.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}",
        "Sid": "KmsViaSecretsManagerPermissionsForBedrock"
      },
      {
        "Action": [
          "lambda:InvokeFunction"
        ],
        "Condition": {
          "StringEquals": {
            "aws:CalledViaFirst": "bedrock.amazonaws.com",
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:lambda:*:*:function:amazon-bedrock-ide-*",
        "Sid": "InvokeFunctionPermissionsForAmazonBedrockIDE"
      },
      {
        "Action": [
          "lambda:InvokeFunction"
        ],
        "Condition": {
          "StringEquals": {
            "aws:CalledViaFirst": "bedrock.amazonaws.com",
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:lambda:*:*:function:amazon-bedrock*",
        "Sid": "LambdaInvokeFunctionViaBedrockPermissions"
      },
      {
        "Action": [
          "cloudformation:GetTemplate",
          "cloudformation:DescribeStacks"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:cloudformation:*:*:stack/DataZone-Env-*",
        "Sid": "GetDataZoneEnvironmentCloudFormationStackPermissions"
      },
      {
        "Action": [
          "cloudformation:DescribeStacks",
          "cloudformation:GetTemplate"
        ],
        "Condition": {
          "StringEquals": {
            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:cloudformation:*:*:stack/DataZone-Env-*",
        "Sid": "CloudFormationGetDataZoneEnvironmentStackPermissions"
      },
      {
        "Action": [
          "glue:GetUserDefinedFunction",
          "glue:GetUserDefinedFunctions"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}",
            "glue:LakeFormationPermissions": "Enabled"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:catalog",
          "arn:aws:glue:*:*:catalog/*",
          "arn:aws:glue:*:*:database/*"
        ],
        "Sid": "GetGlueUserDefinedFuncLakeFormationPermissions"
      },
      {
        "Action": [
          "glue:GetUserDefinedFunction",
          "glue:GetUserDefinedFunctions"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:userDefinedFunction/*"
        ],
        "Sid": "GetGlueUserDefinedFuncPermissions"
      },
      {
        "Action": [
          "secretsmanager:GetSecretValue"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:*:secretsmanager:*:*:secret:*",
        "Sid": "FederatedConnectionGetSecretPermissions"
      },
      {
        "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/athenafederatedcatalog*",
        "Sid": "FederatedConnectionLambdaLogsPermissions"
      },
      {
        "Action": [
          "dynamodb:ListTables"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "FederatedConnectionDDBPermissions"
      },
      {
        "Action": [
          "ec2:CreateNetworkInterface",
          "ec2:DescribeSubnets",
          "ec2:DetachNetworkInterface"
        ],
        "Condition": {
          "StringEquals": {
            "ec2:Vpc": "${aws:PrincipalTag/vpcArn}"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "FederatedConnectionEC2Permissions"
      },
      {
        "Action": [
          "ec2:DeleteNetworkInterface"
        ],
        "Condition": {
          "StringEqualsIfExists": {
            "ec2:Vpc": "${aws:PrincipalTag/vpcArn}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ec2:*:*:*/*",
        "Sid": "FederatedConnectionDeleteENIPermissions"
      },
      {
        "Action": [
          "ec2:DescribeNetworkInterfaces"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "FederatedConnectionDescribeENIPermissions"
      },
      {
        "Action": [
          "ecr:BatchCheckLayerAvailability",
          "ecr:CompleteLayerUpload",
          "ecr:DeleteRepository",
          "ecr:InitiateLayerUpload",
          "ecr:PutImage",
          "ecr:BatchDeleteImage",
          "ecr:ListTagsForResource",
          "ecr:DescribeRepositories",
          "ecr:ListImages",
          "ecr:UploadLayerPart"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ecr:*:*:repository/*",
        "Sid": "PrivateECRPermissions"
      },
      {
        "Action": [
          "ecr:CreateRepository"
        ],
        "Condition": {
          "StringEquals": {
            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ecr:*:*:repository/*",
        "Sid": "CreateECRRepositoryPermission"
      },
      {
        "Action": [
          "ecr:TagResource"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "aws:TagKeys": [
              "AmazonDataZoneProject",
              "ProjectUserTag*"
            ]
          },
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          },
          "StringEqualsIfExists": {
            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ecr:*:*:repository/*",
        "Sid": "ECRTagResourcePermission"
      },
      {
        "Action": [
          "ecr:UntagResource"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "aws:TagKeys": [
              "ProjectUserTag*"
            ]
          },
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ecr:*:*:repository/*",
        "Sid": "ECRUntagResourcePermission"
      },
      {
        "Action": [
          "lakeformation:BatchGrantPermissions",
          "lakeformation:BatchRevokePermissions",
          "lakeformation:ListPermissions",
          "lakeformation:DescribeResource",
          "ram:GetResourceShareInvitations",
          "lakeformation:CreateDataCellsFilter",
          "lakeformation:ListDataCellsFilter",
          "lakeformation:DeleteDataCellsFilter",
          "lakeformation:GetDataCellsFilter",
          "lakeformation:UpdateDataCellsFilter",
          "ram:ListResources"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "LakeformationResourceSharingPermissions"
      },
      {
        "Action": [
          "ram:CreateResourceShare"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "lakeformation.amazonaws.com"
            ]
          },
          "StringEqualsIfExists": {
            "ram:RequestedResourceType": [
              "glue:Table",
              "glue:Database",
              "glue:Catalog"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "CrossAccountLakeFormationResourceSharingPermissions"
      },
      {
        "Action": [
          "glue:DeleteResourcePolicy",
          "glue:PutResourcePolicy"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "ram.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:catalog",
          "arn:aws:glue:*:*:catalog/*",
          "arn:aws:glue:*:*:database/*",
          "arn:aws:glue:*:*:table/*"
        ],
        "Sid": "CrossAccountRAMResourceSharingPermissions"
      },
      {
        "Action": [
          "ram:AssociateResourceShare",
          "ram:DisassociateResourceShare",
          "ram:DeleteResourceShare",
          "ram:ListResourceSharePermissions",
          "ram:UpdateResourceShare"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "lakeformation.amazonaws.com"
            ]
          },
          "StringLike": {
            "ram:ResourceShareName": [
              "LakeFormation*"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "CrossAccountRAMResourceSharingViaLakeFormationPermissions"
      },
      {
        "Action": [
          "ram:GetResourceShares"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "lakeformation.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "RAMGetResourceSharesViaLakeFormation"
      },
      {
        "Action": [
          "ram:AcceptResourceShareInvitation"
        ],
        "Condition": {
          "StringLike": {
            "ram:ResourceShareName": [
              "LakeFormation*",
              "DataZoneS3AG*"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ram:*:*:resource-share-invitation/*",
        "Sid": "CrossAccountRAMResourceShareInvitationPermission"
      },
      {
        "Action": [
          "ram:AssociateResourceSharePermission"
        ],
        "Condition": {
          "ArnLike": {
            "ram:PermissionArn": "arn:aws:ram::aws:permission/AWSRAMLFEnabled*"
          },
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "lakeformation.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "CrossAccountRAMResourceSharingViaLakeFormationHybrid"
      },
      {
        "Action": [
          "scheduler:CreateSchedule",
          "scheduler:GetSchedule",
          "scheduler:UpdateSchedule",
          "scheduler:DeleteSchedule"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:scheduler:*:*:schedule/*"
        ],
        "Sid": "EventBridgeScheduleActions"
      },
      {
        "Action": [
          "scheduler:GetScheduleGroup"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:scheduler:*:*:schedule-group/*"
        ],
        "Sid": "EventBridgeScheduleGroupActions"
      },
      {
        "Action": [
          "quicksight:DescribeDataSource",
          "quicksight:DescribeFolder",
          "quicksight:DescribeFolderPermissions",
          "quicksight:ListFolderMembers"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:quicksight:*:*:folder/*",
          "arn:aws:quicksight:*:*:datasource/*"
        ],
        "Sid": "ManageQuickSightFolderAndDataSourceResources"
      },
      {
        "Action": [
          "quicksight:DescribeDataSet",
          "quicksight:DescribeAccountSubscription",
          "quicksight:DescribeUser",
          "quicksight:DescribeGroup"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:quicksight:*:*:*"
        ],
        "Sid": "ManageQuickSightOtherResources"
      },
      {
        "Action": [
          "quicksight:PassDataSource"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:quicksight:*:*:datasource/*",
        "Sid": "ManagePassDataSourcePermissions"
      },
      {
        "Action": [
          "quicksight:CreateDataSet",
          "quicksight:TagResource"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "aws:TagKeys": [
              "AmazonDataZone*"
            ]
          },
          "Null": {
            "aws:TagKeys": "false"
          },
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          },
          "StringEqualsIfExists": {
            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:quicksight:*:*:dataset/*",
        "Sid": "ManageCreateDataSetPermissions"
      },
      {
        "Action": [
          "quicksight:CreateFolderMembership"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/AmazonDataZoneAssetsFolder": "true",
            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:quicksight:*:*:folder/sagemaker-*-assets",
        "Sid": "CreateFolderMembership"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [
    {
      "access_level": "Read",
      "action": "codecommit:BatchGetCommits",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:BatchGetCommits",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:BatchGetPullRequests",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:BatchGetPullRequests",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:BatchGetRepositories",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:BatchGetRepositories",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:BatchDescribeMergeConflicts",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:BatchDescribeMergeConflicts",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:CreateBranch",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:CreateBranch",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:CreateCommit",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:CreateCommit",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:CreatePullRequest",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:CreatePullRequest",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:DeleteBranch",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:DeleteBranch",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:DeleteFile",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:DeleteFile",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:DescribeMergeConflicts",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:DescribeMergeConflicts",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:DescribePullRequestEvents",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:DescribePullRequestEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetBlob",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetBlob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetBranch",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetBranch",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetComment",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetComment",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetCommentReactions",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetCommentReactions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetCommentsForComparedCommit",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetCommentsForComparedCommit",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetCommentsForPullRequest",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetCommentsForPullRequest",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetCommit",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetCommit",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetCommitHistory",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetCommitHistory",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetCommitsFromMergeBase",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetCommitsFromMergeBase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetDifferences",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetDifferences",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetFile",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetFile",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetFolder",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetFolder",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetMergeCommit",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetMergeCommit",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetMergeConflicts",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetMergeConflicts",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetMergeOptions",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetMergeOptions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetObjectIdentifier",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetObjectIdentifier",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetPullRequest",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetPullRequest",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetPullRequestApprovalStates",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetPullRequestApprovalStates",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetPullRequestOverrideState",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetPullRequestOverrideState",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetReferences",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetReferences",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetRepository",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:GetRepository",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetRepositoryTriggers",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:GetRepositoryTriggers",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetTree",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GetTree",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GetUploadArchiveStatus",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:GetUploadArchiveStatus",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codecommit:GitPull",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "codecommit:GitPull",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:GitPush",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:GitPush",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "codecommit:ListBranches",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:ListBranches",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "codecommit:ListFileCommitHistory",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:ListFileCommitHistory",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "codecommit:ListPullRequests",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:ListPullRequests",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "codecommit:ListTagsForResource",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:ListTagsForResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:MergeBranchesByFastForward",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:MergeBranchesByFastForward",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:MergeBranchesBySquash",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:MergeBranchesBySquash",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:MergeBranchesByThreeWay",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:MergeBranchesByThreeWay",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:MergePullRequestByFastForward",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:MergePullRequestByFastForward",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:MergePullRequestBySquash",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:MergePullRequestBySquash",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:MergePullRequestByThreeWay",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:MergePullRequestByThreeWay",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:UpdateComment",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:UpdateComment",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:UpdateDefaultBranch",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:UpdateDefaultBranch",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:UpdatePullRequestApprovalRuleContent",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:UpdatePullRequestApprovalRuleContent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:UpdatePullRequestApprovalState",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:UpdatePullRequestApprovalState",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:UpdatePullRequestDescription",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:UpdatePullRequestDescription",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:UpdatePullRequestStatus",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:UpdatePullRequestStatus",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:UpdatePullRequestTitle",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:UpdatePullRequestTitle",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:UpdateRepositoryDescription",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:UpdateRepositoryDescription",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:PostCommentForComparedCommit",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:PostCommentForComparedCommit",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:PostCommentForPullRequest",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:PostCommentForPullRequest",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:PostCommentReply",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:PostCommentReply",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:PutCommentReaction",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:PutCommentReaction",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "codecommit:PutFile",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codecommit:PutFile",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:ReEncryptFrom",
      "condition": {
        "Null": {
          "kms:EncryptionContext:aws:codecommit:id": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "codecommit.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:ReEncryptFrom",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:ReEncryptTo",
      "condition": {
        "Null": {
          "kms:EncryptionContext:aws:codecommit:id": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "codecommit.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:ReEncryptTo",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "Null": {
          "kms:EncryptionContext:aws:codecommit:id": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "codecommit.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Encrypt",
      "condition": {
        "Null": {
          "kms:EncryptionContext:aws:codecommit:id": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "codecommit.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Encrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "Null": {
          "kms:EncryptionContext:aws:codecommit:id": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "codecommit.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKeyWithoutPlaintext",
      "condition": {
        "Null": {
          "kms:EncryptionContext:aws:codecommit:id": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "codecommit.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKeyWithoutPlaintext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "codewhisperer:GenerateRecommendations",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "codewhisperer:GenerateRecommendations",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:CreateNetworkInterface",
      "condition": {
        "Null": {
          "aws:TagKeys": "true"
        },
        "StringEquals": {
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateNetworkInterface",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:CreateNetworkInterface",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateNetworkInterface",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:CreateNetworkInterface",
      "condition": {
        "StringEquals": {
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateNetworkInterface",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:DeleteNetworkInterface",
      "condition": {
        "Null": {
          "aws:ResourceTag/aws-glue-service-resource": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DeleteNetworkInterface",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:AttachNetworkInterface",
      "condition": {
        "Null": {
          "aws:ResourceTag/aws-glue-service-resource": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:AttachNetworkInterface",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:AttachNetworkInterface",
      "condition": {
        "StringEquals": {
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:AttachNetworkInterface",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeNetworkInterfaces",
      "condition": {
        "StringEquals": {
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeNetworkInterfaces",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "secretsmanager:DescribeSecret",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:DescribeSecret",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "secretsmanager:GetSecretValue",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:GetSecretValue",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeVpcEndpoints",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeVpcEndpoints",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeSubnets",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeSubnets",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeRouteTables",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeRouteTables",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeSecurityGroups",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeSecurityGroups",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "glue:ListSessions",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListSessions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeVpcs",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeVpcs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreateSession",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZone*",
            "ProjectUserTag*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreateSession",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreateBlueprint",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZone*",
            "ProjectUserTag*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreateBlueprint",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreateJob",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZone*",
            "ProjectUserTag*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreateJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreateDataQualityRuleset",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZone*",
            "ProjectUserTag*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreateDataQualityRuleset",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreateWorkflow",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZone*",
            "ProjectUserTag*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreateWorkflow",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "glue:TagResource",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZone*",
            "ProjectUserTag*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:TagResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "glue:TagResource",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "ProjectUserTag*"
          ]
        },
        "ForAllValues:StringNotLike": {
          "aws:TagKeys": [
            "AmazonDataZone*"
          ]
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:TagResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "glue:UntagResource",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "ProjectUserTag*"
          ]
        },
        "ForAllValues:StringNotLike": {
          "aws:TagKeys": [
            "AmazonDataZone*"
          ]
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UntagResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CancelStatement",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CancelStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetSession",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetSession",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "glue:ListStatements",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListStatements",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteSession",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteSession",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:RunStatement",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:RunStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetStatement",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:StopSession",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:StopSession",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDashboardUrl",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDashboardUrl",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:NotifyEvent",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:NotifyEvent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:StartBlueprintRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:StartBlueprintRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:PutWorkflowRunProperties",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:PutWorkflowRunProperties",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteWorkflow",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteWorkflow",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteBlueprint",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteBlueprint",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdateWorkflow",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdateWorkflow",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdateJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdateJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:StartWorkflowRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:StartWorkflowRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:ResumeWorkflowRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ResumeWorkflowRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdateBlueprint",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdateBlueprint",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:BatchStopJobRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:BatchStopJobRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:StopWorkflowRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:StopWorkflowRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:StartJobRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:StartJobRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CancelDataQualityRuleRecommendationRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CancelDataQualityRuleRecommendationRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CancelDataQualityRulesetEvaluationRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CancelDataQualityRulesetEvaluationRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteDataQualityRuleset",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteDataQualityRuleset",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDataQualityModel",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDataQualityModel",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDataQualityModelResult",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDataQualityModelResult",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDataQualityResult",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDataQualityResult",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDataQualityRuleRecommendationRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDataQualityRuleRecommendationRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDataQualityRuleset",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDataQualityRuleset",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDataQualityRulesetEvaluationRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDataQualityRulesetEvaluationRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "glue:ListDataQualityResults",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListDataQualityResults",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "glue:ListDataQualityRuleRecommendationRuns",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListDataQualityRuleRecommendationRuns",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "glue:ListDataQualityRulesetEvaluationRuns",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListDataQualityRulesetEvaluationRuns",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "glue:ListDataQualityRulesets",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListDataQualityRulesets",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:PublishDataQuality",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:PublishDataQuality",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:PutDataQualityProfileAnnotation",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:PutDataQualityProfileAnnotation",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:PutDataQualityStatisticAnnotation",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:PutDataQualityStatisticAnnotation",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:StartDataQualityRuleRecommendationRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:StartDataQualityRuleRecommendationRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:StartDataQualityRulesetEvaluationRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:StartDataQualityRulesetEvaluationRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdateDataQualityRuleset",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdateDataQualityRuleset",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetJobRun",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetJobRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetJobRuns",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetJobRuns",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:BatchGetJobs",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:BatchGetJobs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "glue:ListJobs",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListJobs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetGeneratedCode",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetGeneratedCode",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:StartCompletion",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:StartCompletion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetCompletion",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetCompletion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:CreateLogGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:CreateLogGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:CreateLogStream",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:CreateLogStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:PutLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:PutLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "ec2:DeleteTags",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "aws-glue-*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DeleteTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "ec2:CreateTags",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "aws-glue-*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "glue:RoleAssumedBy": "glue.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "kms:EncryptionContext:glue_catalog_id": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "glue.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Encrypt",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "kms:EncryptionContext:glue_catalog_id": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "glue.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Encrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "kms:EncryptionContext:glue_catalog_id": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "glue.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "emr-serverless:AccessInteractiveEndpoints",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "emr-serverless:AccessInteractiveEndpoints",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "emr-serverless:AccessLivyEndpoints",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "emr-serverless:AccessLivyEndpoints",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "emr-serverless:GetApplication",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "emr-serverless:GetApplication",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "emr-serverless:StartApplication",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "emr-serverless:StartApplication",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "emr-serverless:StopApplication",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "emr-serverless:StopApplication",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "emr-serverless:GetDashboardForJobRun",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "emr-serverless:GetDashboardForJobRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "emr-serverless:GetJobRun",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "emr-serverless:GetJobRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "airflow:GetEnvironment",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "airflow:GetEnvironment",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "airflow:UpdateEnvironment",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "airflow:UpdateEnvironment",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "airflow:ListEnvironments",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "airflow:ListEnvironments",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "airflow:CreateWebLoginToken",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "airflow:CreateWebLoginToken",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "airflow:InvokeRestApi",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "airflow:InvokeRestApi",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:CreateLogStream",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:CreateLogStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:CreateLogGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:CreateLogGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:PutLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:PutLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "logs:GetLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetLogRecord",
      "condition": null,
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "logs:GetLogRecord",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetLogGroupFields",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:GetLogGroupFields",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetQueryResults",
      "condition": null,
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "logs:GetQueryResults",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "cloudwatch:PutMetricData",
      "condition": {
        "StringLike": {
          "cloudwatch:namespace": "AmazonMWAA"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "cloudwatch:PutMetricData",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "cloudwatch:PutMetricData",
      "condition": {
        "StringLike": {
          "cloudwatch:namespace": [
            "Glue",
            "AWS/Glue"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "cloudwatch:PutMetricData",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetAccountPublicAccessBlock",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetAccountPublicAccessBlock",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sqs:ChangeMessageVisibility",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqs:ChangeMessageVisibility",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sqs:DeleteMessage",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqs:DeleteMessage",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqs:GetQueueAttributes",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqs:GetQueueAttributes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqs:GetQueueUrl",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqs:GetQueueUrl",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqs:ReceiveMessage",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "sqs:ReceiveMessage",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sqs:SendMessage",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqs:SendMessage",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetEncryptionConfiguration",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetEncryptionConfiguration",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetBucketPublicAccessBlock",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetBucketPublicAccessBlock",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetBucketLocation",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetBucketLocation",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "s3:GetObject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectAcl",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectAttributes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectLegalHold",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectRetention",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectTagging",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectTorrent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "s3:GetObjectVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionAcl",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionAttributes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionForReplication",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionTagging",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionTorrent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "s3:ListMultipartUploadParts",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:ListMultipartUploadParts",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "s3:ListBucket",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:ListBucket",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "kms:ListGrants",
      "condition": {
        "StringLike": {
          "kms:ViaService": "s3.*.amazonaws.com"
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:ListGrants",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "kms:GetPublicKey",
      "condition": {
        "StringLike": {
          "kms:ViaService": "s3.*.amazonaws.com"
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GetPublicKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "kms:DescribeKey",
      "condition": {
        "StringLike": {
          "kms:ViaService": "s3.*.amazonaws.com"
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:DescribeKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "ForAnyValue:StringEquals": {
          "kms:EncryptionContextKeys": "aws:s3:arn"
        },
        "StringLike": {
          "kms:ViaService": "s3.*.amazonaws.com"
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "s3:ListBucket",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "s3:prefix": [
            "${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}",
            "${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}/*"
          ]
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:ListBucket",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "s3:ListBucketVersions",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "s3:prefix": [
            "${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}",
            "${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}/*"
          ]
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:ListBucketVersions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "s3:ListBucket",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:ListBucket",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "s3:ListBucket",
      "condition": {
        "ArnEquals": {
          "lambda:SourceFunctionArn": "arn:aws:lambda:*:*:function:athenafederatedcatalog_*"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:ListBucket",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "s3:GetObject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectAcl",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectAttributes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectLegalHold",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectRetention",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectTagging",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectTorrent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "s3:GetObjectVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionAcl",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionAttributes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionForReplication",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionTagging",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetObjectVersionTorrent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "s3:PutObject",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:PutObject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "s3:PutObjectRetention",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:PutObjectRetention",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "s3:RestoreObject",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:RestoreObject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "s3:ReplicateObject",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:ReplicateObject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "s3:DeleteObject",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:DeleteObject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "s3:DeleteObjectVersion",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:DeleteObjectVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "s3:ListMultipartUploadParts",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:ListMultipartUploadParts",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "s3:AbortMultipartUpload",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:AbortMultipartUpload",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "s3:GetBucketAcl",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:GetBucketAcl",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "s3:PutObjectTagging",
      "condition": {
        "ForAllValues:StringEquals": {
          "s3:RequestObjectTagKeys": [
            "BasicValidationStatus",
            "ContainsReferenceResponseForAllPrompts"
          ]
        },
        "StringEquals": {
          "s3:RequestObjectTag/BasicValidationStatus": [
            "valid",
            "invalid"
          ],
          "s3:RequestObjectTag/ContainsReferenceResponseForAllPrompts": [
            "true",
            "false"
          ]
        },
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneDomain": "",
          "aws:PrincipalTag/AmazonDataZoneProject": "",
          "aws:PrincipalTag/DomainBucketName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "s3:PutObjectTagging",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "ArnLike": {
          "kms:EncryptionContext:aws:s3:arn": [
            "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}",
            "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}/*"
          ]
        },
        "StringLike": {
          "kms:ViaService": "s3.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "ArnLike": {
          "kms:EncryptionContext:aws:s3:arn": [
            "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}",
            "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}/*"
          ]
        },
        "StringLike": {
          "kms:ViaService": "s3.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "StringEquals": {
          "kms:EncryptionContext:aws:datazone:domainId": "${aws:PrincipalTag/AmazonDataZoneDomain}",
          "kms:ViaService": [
            "datazone.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "StringEquals": {
          "kms:EncryptionContext:aws:datazone:domainId": "${aws:PrincipalTag/AmazonDataZoneDomain}",
          "kms:ViaService": [
            "datazone.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "logs:DescribeLogGroups",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:DescribeLogGroups",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "logs:DescribeLogStreams",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:DescribeLogStreams",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:StartQuery",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:StartQuery",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "logs:GetLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetLogRecord",
      "condition": null,
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "logs:GetLogRecord",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetLogGroupFields",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:GetLogGroupFields",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetQueryResults",
      "condition": null,
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "logs:GetQueryResults",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:PutLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:PutLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:CreateLogGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:CreateLogGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:CreateLogStream",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:CreateLogStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:FilterLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:FilterLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "logs:DescribeLogStreams",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:DescribeLogStreams",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:StartQuery",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:StartQuery",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "logs:GetLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetLogRecord",
      "condition": null,
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "logs:GetLogRecord",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetLogGroupFields",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:GetLogGroupFields",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:GetQueryResults",
      "condition": null,
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "logs:GetQueryResults",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:PutLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:PutLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:CreateLogStream",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:CreateLogStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:FilterLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:FilterLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "logs:StopQuery",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:StopQuery",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:TerminateSession",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:TerminateSession",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:CreatePreparedStatement",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:CreatePreparedStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:StopCalculationExecution",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:StopCalculationExecution",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:StartQueryExecution",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:StartQueryExecution",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:UpdatePreparedStatement",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:UpdatePreparedStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:BatchGetNamedQuery",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:BatchGetNamedQuery",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:BatchGetPreparedStatement",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:BatchGetPreparedStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:BatchGetQueryExecution",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:BatchGetQueryExecution",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:UpdateNotebook",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:UpdateNotebook",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:DeleteNotebook",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:DeleteNotebook",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:DeletePreparedStatement",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:DeletePreparedStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:UpdateNotebookMetadata",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:UpdateNotebookMetadata",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:DeleteNamedQuery",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:DeleteNamedQuery",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetCalculationExecution",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetCalculationExecution",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetCalculationExecutionCode",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetCalculationExecutionCode",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetCalculationExecutionStatus",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetCalculationExecutionStatus",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetNamedQuery",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetNamedQuery",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetNotebookMetadata",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetNotebookMetadata",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetPreparedStatement",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetPreparedStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetQueryExecution",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "athena:GetQueryExecution",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetQueryResults",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "athena:GetQueryResults",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetQueryResultsStream",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "athena:GetQueryResultsStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetQueryRuntimeStatistics",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetQueryRuntimeStatistics",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetSession",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": true,
      "data_access": false,
      "effective_action": "athena:GetSession",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetSessionStatus",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetSessionStatus",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetWorkGroup",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetWorkGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:UpdateNamedQuery",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:UpdateNamedQuery",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:CreateNamedQuery",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:CreateNamedQuery",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:ExportNotebook",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ExportNotebook",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:StopQueryExecution",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:StopQueryExecution",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:StartCalculationExecution",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:StartCalculationExecution",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:StartSession",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:StartSession",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:CreatePresignedNotebookUrl",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:CreatePresignedNotebookUrl",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:CreateNotebook",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:CreateNotebook",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "athena:ImportNotebook",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ImportNotebook",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:ListQueryExecutions",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ListQueryExecutions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:ListTagsForResource",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ListTagsForResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "athena:ListNamedQueries",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ListNamedQueries",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "athena:ListPreparedStatements",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ListPreparedStatements",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetDatabase",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetDataCatalog",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetDataCatalog",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:GetTableMetadata",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:GetTableMetadata",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "athena:ListDatabases",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ListDatabases",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:ListTableMetadata",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ListTableMetadata",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "athena:ListDataCatalogs",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ListDataCatalogs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "athena:ListEngineVersions",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ListEngineVersions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "athena:ListWorkGroups",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "athena:ListWorkGroups",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "datazone:CreateConnection",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:CreateConnection",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "datazone:DeleteConnection",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:DeleteConnection",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "datazone:GetConnection",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:GetConnection",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "datazone:GetDomain",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:GetDomain",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "datazone:GetDomainExecutionRoleCredentials",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:GetDomainExecutionRoleCredentials",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "datazone:GetEnvironment",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:GetEnvironment",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "datazone:GetEnvironmentBlueprintConfiguration",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:GetEnvironmentBlueprintConfiguration",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "datazone:GetProject",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:GetProject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "datazone:GetUserProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:GetUserProfile",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "datazone:ListConnections",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:ListConnections",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "datazone:ListEnvironments",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:ListEnvironments",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "datazone:ListEnvironmentBlueprints",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:ListEnvironmentBlueprints",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "datazone:ListProjects",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:ListProjects",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "datazone:UpdateConnection",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:UpdateConnection",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "datazone:PostLineageEvent",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "datazone:PostLineageEvent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDatabase",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDatabases",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDatabases",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDatabases",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDatabases",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetClassifier",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetClassifier",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetClassifiers",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetClassifiers",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "glue:UseGlueStudio",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UseGlueStudio",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:PassConnection",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:PassConnection",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetConnection",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetConnection",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetConnections",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetConnections",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetConnection",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetConnection",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetConnections",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetConnections",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreateTable",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreateTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteTable",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:BatchDeleteTable",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:BatchDeleteTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdateTable",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdateTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:BatchCreatePartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:BatchCreatePartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreatePartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreatePartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeletePartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeletePartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:BatchDeletePartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:BatchDeletePartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdatePartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdatePartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:BatchGetPartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:BatchGetPartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:BatchGetTableOptimizer",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:BatchGetTableOptimizer",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetCatalogImportStatus",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetCatalogImportStatus",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetColumnStatisticsForPartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetColumnStatisticsForPartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetColumnStatisticsForTable",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetColumnStatisticsForTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetColumnStatisticsTaskRun",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetColumnStatisticsTaskRun",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetColumnStatisticsTaskRuns",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetColumnStatisticsTaskRuns",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDatabase",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteDatabase",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetPartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetPartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetPartitionIndexes",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetPartitionIndexes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetPartitions",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetPartitions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetTable",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetTableOptimizer",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetTableOptimizer",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetTableVersion",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetTableVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetTableVersions",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetTableVersions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetTables",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetTables",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:SearchTables",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:SearchTables",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "glue:ListTableOptimizerRuns",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListTableOptimizerRuns",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreatePartitionIndex",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreatePartitionIndex",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:BatchUpdatePartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:BatchUpdatePartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteTableVersion",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteTableVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteColumnStatisticsForPartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteColumnStatisticsForPartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteColumnStatisticsForTable",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteColumnStatisticsForTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeletePartitionIndex",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeletePartitionIndex",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdateColumnStatisticsForPartition",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdateColumnStatisticsForPartition",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdateColumnStatisticsForTable",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdateColumnStatisticsForTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:BatchDeleteTableVersion",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:BatchDeleteTableVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetCatalogs",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetCatalogs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetCatalog",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetCatalog",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "glue:ListCrawls",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListCrawls",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreateDatabase",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreateDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteDatabase",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDatabase",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetCatalog",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetCatalog",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdateCatalog",
      "condition": {
        "StringEquals": {
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdateCatalog",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetCatalog",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetCatalog",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:UpdateCatalog",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:UpdateCatalog",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:CreateDatabase",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:CreateDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "glue:DeleteDatabase",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetDatabase",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetDatabase",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "lakeformation:GetDataAccess",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:GetDataAccess",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "iam:ListRoles",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:ListRoles",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "iam:GetRole",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:GetRole",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sts:AssumeRole",
      "condition": {
        "StringNotEquals": {
          "aws:PrincipalTag/AmazonDataZoneProject": ""
        }
      },
      "credentials_exposure": true,
      "data_access": false,
      "effective_action": "sts:AssumeRole",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sts:SetSourceIdentity",
      "condition": {
        "StringLike": {
          "sts:SourceIdentity": "${aws:PrincipalTag/datazone:userId}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sts:SetSourceIdentity",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "sts:TagSession",
      "condition": {
        "ForAllValues:StringEquals": {
          "aws:TagKeys": [
            "AmazonDataZoneProject",
            "AmazonDataZoneDomain"
          ]
        },
        "StringEquals": {
          "aws:RequestTag/AmazonDataZoneDomain": "${aws:PrincipalTag/AmazonDataZoneDomain}",
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sts:TagSession",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sts:SetContext",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "sqlworkbench.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sts:SetContext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sts:SetContext",
      "condition": {
        "ForAllValues:ArnEquals": {
          "sts:RequestContextProviders": [
            "arn:aws:iam::aws:contextProvider/IdentityCenter"
          ]
        },
        "Null": {
          "sts:RequestContextProviders": "false"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sts:SetContext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetConnection",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetConnection",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetConnections",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetConnections",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetTags",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "glue:ListConnectionTypes",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListConnectionTypes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "glue:DescribeConnectionType",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DescribeConnectionType",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "glue:ListEntities",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:ListEntities",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "glue:DescribeEntity",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DescribeEntity",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetEntityRecords",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetEntityRecords",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "iam:PassedToService": [
            "sagemaker.amazonaws.com",
            "glue.amazonaws.com",
            "airflow.amazonaws.com",
            "emr-serverless.amazonaws.com",
            "scheduler.amazonaws.com",
            "access-grants.s3.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:PassRole",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Write",
      "action": "sqlworkbench:PutTab",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:PutTab",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sqlworkbench:DeleteTab",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:DeleteTab",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sqlworkbench:DriverExecute",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:DriverExecute",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqlworkbench:GetUserInfo",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:GetUserInfo",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "sqlworkbench:ListTabs",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:ListTabs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqlworkbench:GetAutocompletionMetadata",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:GetAutocompletionMetadata",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqlworkbench:GetAutocompletionResource",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:GetAutocompletionResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sqlworkbench:PassAccountSettings",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:PassAccountSettings",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "sqlworkbench:ListQueryExecutionHistory",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:ListQueryExecutionHistory",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqlworkbench:GetQueryExecutionHistory",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:GetQueryExecutionHistory",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sqlworkbench:CreateConnection",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:CreateConnection",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sqlworkbench:PutQCustomContext",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:PutQCustomContext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqlworkbench:GetQCustomContext",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:GetQCustomContext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "sqlworkbench:DeleteQCustomContext",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:DeleteQCustomContext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqlworkbench:GetQSqlRecommendations",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:GetQSqlRecommendations",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqlworkbench:GetQSqlPromptQuotas",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:GetQSqlPromptQuotas",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "sqlworkbench:GetSchemaInference",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "sqlworkbench:GetSchemaInference",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:DescribeStatement",
      "condition": {
        "StringEquals": {
          "redshift-data:statement-owner-iam-userid": "${aws:userid}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:DescribeStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:GetStatementResult",
      "condition": {
        "StringEquals": {
          "redshift-data:statement-owner-iam-userid": "${aws:userid}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:GetStatementResult",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-data:CancelStatement",
      "condition": {
        "StringEquals": {
          "redshift-data:statement-owner-iam-userid": "${aws:userid}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:CancelStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "redshift-data:ListStatements",
      "condition": {
        "StringEquals": {
          "redshift-data:statement-owner-iam-userid": "${aws:userid}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ListStatements",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-data:BatchExecuteStatement",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:BatchExecuteStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-data:ExecuteStatement",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ExecuteStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:DescribeTable",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:DescribeTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:ListDatabases",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ListDatabases",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:ListSchemas",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ListSchemas",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "redshift-data:ListTables",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ListTables",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-serverless:GetWorkgroup",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:GetWorkgroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-serverless:GetNamespace",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:GetNamespace",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "redshift-serverless:ListTagsForResource",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:ListTagsForResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-serverless:GetCredentials",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:GetCredentials",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift:DescribeTags",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift:DescribeTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift:GetClusterCredentialsWithIAM",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift:GetClusterCredentialsWithIAM",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-data:BatchExecuteStatement",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:BatchExecuteStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-data:ExecuteStatement",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ExecuteStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:DescribeTable",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:DescribeTable",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:ListDatabases",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ListDatabases",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:ListSchemas",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ListSchemas",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "redshift-data:ListTables",
      "condition": {
        "Null": {
          "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
        },
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ListTables",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "redshift-serverless:ListNamespaces",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:ListNamespaces",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "redshift-serverless:ListWorkgroups",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:ListWorkgroups",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "redshift:DescribeClusters",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift:DescribeClusters",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-serverless:GetWorkgroup",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:GetWorkgroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "redshift-serverless:ListTagsForResource",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:ListTagsForResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-serverless:GetNamespace",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:GetNamespace",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift:DescribeTags",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift:DescribeTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift:GetClusterCredentialsWithIAM",
      "condition": {
        "Bool": {
          "aws:ViaAWSService": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift:GetClusterCredentialsWithIAM",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "secretsmanager:ListSecrets",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:ListSecrets",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-serverless:GetCredentials",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:GetCredentials",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift:GetClusterCredentialsWithIAM",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift:GetClusterCredentialsWithIAM",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-data:BatchExecuteStatement",
      "condition": {
        "StringLike": {
          "redshift-data:glue-catalog-arn": "arn:aws:glue:*:*:catalog/*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:BatchExecuteStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-data:ExecuteStatement",
      "condition": {
        "StringLike": {
          "redshift-data:glue-catalog-arn": "arn:aws:glue:*:*:catalog/*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:ExecuteStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:DescribeStatement",
      "condition": {
        "StringLike": {
          "redshift-data:glue-catalog-arn": "arn:aws:glue:*:*:catalog/*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:DescribeStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:GetStatementResult",
      "condition": {
        "StringLike": {
          "redshift-data:glue-catalog-arn": "arn:aws:glue:*:*:catalog/*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:GetStatementResult",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-data:CancelStatement",
      "condition": {
        "StringLike": {
          "redshift-data:glue-catalog-arn": "arn:aws:glue:*:*:catalog/*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:CancelStatement",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-data:GetStagingBucketLocation",
      "condition": {
        "StringLike": {
          "redshift-data:glue-catalog-arn": "arn:aws:glue:*:*:catalog/*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-data:GetStagingBucketLocation",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "redshift-serverless:GetManagedWorkgroup",
      "condition": {
        "StringLike": {
          "redshift-data:glue-catalog-arn": "arn:aws:glue:*:*:catalog/*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:GetManagedWorkgroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "redshift-serverless:GetCredentials",
      "condition": {
        "Bool": {
          "aws:ViaAWSService": "true"
        },
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "redshift-data.amazonaws.com",
            "sqlworkbench.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "redshift-serverless:GetCredentials",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "tag:GetResources",
      "condition": {
        "StringEquals": {
          "aws:CalledViaLast": "sqlworkbench.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "tag:GetResources",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "secretsmanager:GetSecretValue",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:GetSecretValue",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "cloudwatch:GetMetricData",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "cloudwatch:GetMetricData",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "cloudwatch:GetMetricStatistics",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "cloudwatch:GetMetricStatistics",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "q:StartConversation",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "q:StartConversation",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "q:SendMessage",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "q:SendMessage",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "elasticmapreduce:DescribeCluster",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:DescribeCluster",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "elasticmapreduce:ListInstances",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:ListInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "elasticmapreduce:ListInstanceFleets",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:ListInstanceFleets",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "elasticmapreduce:ListInstanceGroups",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:ListInstanceGroups",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "elasticmapreduce:ListBootstrapActions",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:ListBootstrapActions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "elasticmapreduce:GetManagedScalingPolicy",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:GetManagedScalingPolicy",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "elasticmapreduce:GetOnClusterAppUIPresignedURL",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:GetOnClusterAppUIPresignedURL",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "elasticmapreduce:ListReleaseLabels",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:ListReleaseLabels",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "elasticmapreduce:ListSupportedInstanceTypes",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:ListSupportedInstanceTypes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "elasticmapreduce:ListClusters",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:ListClusters",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "elasticmapreduce:CreatePersistentAppUI",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:CreatePersistentAppUI",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "elasticmapreduce:DescribePersistentAppUI",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:DescribePersistentAppUI",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "pricing:GetProducts",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "pricing:GetProducts",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "elasticmapreduce:GetClusterSessionCredentials",
      "condition": {
        "ArnLike": {
          "elasticmapreduce:ExecutionRoleArn": "arn:aws:iam::*:role/${aws:PrincipalTag/RoleName}"
        },
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:GetClusterSessionCredentials",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "elasticmapreduce:GetPersistentAppUIPresignedURL",
      "condition": {
        "ArnLike": {
          "elasticmapreduce:ExecutionRoleArn": "arn:aws:iam::*:role/${aws:PrincipalTag/RoleName}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticmapreduce:GetPersistentAppUIPresignedURL",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "kms:CreateGrant",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "bedrock.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "scheduler.*.amazonaws.com",
            "glue.*.amazonaws.com",
            "secretsmanager.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "kms:CreateGrant",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Write",
      "action": "kms:ReEncryptFrom",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "bedrock.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "scheduler.*.amazonaws.com",
            "glue.*.amazonaws.com",
            "secretsmanager.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:ReEncryptFrom",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:ReEncryptTo",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "bedrock.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "scheduler.*.amazonaws.com",
            "glue.*.amazonaws.com",
            "secretsmanager.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:ReEncryptTo",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "bedrock.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "scheduler.*.amazonaws.com",
            "glue.*.amazonaws.com",
            "secretsmanager.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Encrypt",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "bedrock.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "scheduler.*.amazonaws.com",
            "glue.*.amazonaws.com",
            "secretsmanager.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Encrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "bedrock.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "scheduler.*.amazonaws.com",
            "glue.*.amazonaws.com",
            "secretsmanager.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKeyWithoutPlaintext",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "bedrock.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "scheduler.*.amazonaws.com",
            "glue.*.amazonaws.com",
            "secretsmanager.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKeyWithoutPlaintext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "kms:CreateGrant",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "emr-serverless.*.amazonaws.com",
            "redshift.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "kms:CreateGrant",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Write",
      "action": "kms:ReEncryptFrom",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "emr-serverless.*.amazonaws.com",
            "redshift.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:ReEncryptFrom",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:ReEncryptTo",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "emr-serverless.*.amazonaws.com",
            "redshift.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:ReEncryptTo",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "emr-serverless.*.amazonaws.com",
            "redshift.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "emr-serverless.*.amazonaws.com",
            "redshift.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKeyWithoutPlaintext",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "emr-serverless.*.amazonaws.com",
            "redshift.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKeyWithoutPlaintext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "kms:ListGrants",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "emr-serverless.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "redshift.*.amazonaws.com",
            "codecommit.*.amazonaws.com",
            "scheduler.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:ListGrants",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "kms:RevokeGrant",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "emr-serverless.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "redshift.*.amazonaws.com",
            "codecommit.*.amazonaws.com",
            "scheduler.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:RevokeGrant",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Read",
      "action": "kms:DescribeKey",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "emr-serverless.*.amazonaws.com",
            "s3.*.amazonaws.com",
            "redshift.*.amazonaws.com",
            "codecommit.*.amazonaws.com",
            "scheduler.*.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:DescribeKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "kms:CreateGrant",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringLike": {
          "kms:ViaService": [
            "s3.*.amazonaws.com",
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com"
          ]
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "kms:CreateGrant",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringLike": {
          "kms:ViaService": [
            "s3.*.amazonaws.com",
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com"
          ]
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Encrypt",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringLike": {
          "kms:ViaService": [
            "s3.*.amazonaws.com",
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com"
          ]
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Encrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringLike": {
          "kms:ViaService": [
            "s3.*.amazonaws.com",
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com"
          ]
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKeyWithoutPlaintext",
      "condition": {
        "Null": {
          "kms:EncryptionContextKeys": "false"
        },
        "StringLike": {
          "kms:ViaService": [
            "s3.*.amazonaws.com",
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com"
          ]
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKeyWithoutPlaintext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "kms:DescribeKey",
      "condition": {
        "StringLike": {
          "kms:ViaService": [
            "sqs.*.amazonaws.com",
            "sagemaker.*.amazonaws.com"
          ]
        },
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:DescribeKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "kms:ListAliases",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:ListAliases",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeInstanceTypes",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeInstanceTypes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeModel",
      "condition": {
        "Null": {
          "bedrock:InferenceProfileArn": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeModel",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeModelWithResponseStream",
      "condition": {
        "Null": {
          "bedrock:InferenceProfileArn": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeModelWithResponseStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeModel",
      "condition": {
        "ArnLike": {
          "bedrock:InferenceProfileArn": "arn:aws:bedrock:*:*:application-inference-profile/*"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeModel",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeModelWithResponseStream",
      "condition": {
        "ArnLike": {
          "bedrock:InferenceProfileArn": "arn:aws:bedrock:*:*:application-inference-profile/*"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeModelWithResponseStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetInferenceProfile",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetInferenceProfile",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeModel",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeModel",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeModelWithResponseStream",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeModelWithResponseStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetInferenceProfile",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetInferenceProfile",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeModel",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeModel",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeModelWithResponseStream",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeModelWithResponseStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeAgent",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeAgent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:Retrieve",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:Retrieve",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListIngestionJobs",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListIngestionJobs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:StartIngestionJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:StartIngestionJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetIngestionJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetIngestionJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:ApplyGuardrail",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ApplyGuardrail",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListPrompts",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListPrompts",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetPrompt",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetPrompt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreatePrompt",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreatePrompt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:DeletePrompt",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:DeletePrompt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreatePromptVersion",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreatePromptVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeFlow",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeFlow",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetEvaluationJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreateEvaluationJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreateEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:StopEvaluationJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:StopEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:BatchDeleteEvaluationJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:BatchDeleteEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:ListTagsForResource",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListTagsForResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreateAgentAlias",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreateAgentAlias",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListAgentAliases",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListAgentAliases",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetAgentVersion",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetAgentVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListAgentVersions",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListAgentVersions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:DeleteAgentVersion",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:DeleteAgentVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:DeleteAgentAlias",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:DeleteAgentAlias",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetAgentAlias",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetAgentAlias",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:UpdateAgentAlias",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:UpdateAgentAlias",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:ApplyGuardrail",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ApplyGuardrail",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:BatchDeleteEvaluationJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:BatchDeleteEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreateAgentAlias",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreateAgentAlias",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreateBlueprint",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreateBlueprint",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreateBlueprintVersion",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreateBlueprintVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreateDataAutomationProject",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreateDataAutomationProject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreateEvaluationJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreateEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreatePrompt",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreatePrompt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreatePromptVersion",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreatePromptVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:DeleteAgentAlias",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:DeleteAgentAlias",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:DeleteAgentVersion",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:DeleteAgentVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:DeleteBlueprint",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:DeleteBlueprint",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:DeleteDataAutomationProject",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:DeleteDataAutomationProject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:DeletePrompt",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:DeletePrompt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetAgentAlias",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetAgentAlias",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetAgentVersion",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetAgentVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetBlueprint",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetBlueprint",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetDataAutomationProject",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetDataAutomationProject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetDataAutomationStatus",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetDataAutomationStatus",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetEvaluationJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetIngestionJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetIngestionJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:GetPrompt",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:GetPrompt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeAgent",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeAgent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:InvokeDataAutomationAsync",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeDataAutomationAsync",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeFlow",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeFlow",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListAgentAliases",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListAgentAliases",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListAgentVersions",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListAgentVersions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListIngestionJobs",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListIngestionJobs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListPrompts",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListPrompts",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:ListTagsForResource",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListTagsForResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:Retrieve",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:Retrieve",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:StartIngestionJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:StartIngestionJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:StopEvaluationJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:StopEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:UpdateAgentAlias",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:UpdateAgentAlias",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:UpdateBlueprint",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:UpdateBlueprint",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:UpdateDataAutomationProject",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:UpdateDataAutomationProject",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListAgentActionGroups",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListAgentActionGroups",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListAgentKnowledgeBases",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListAgentKnowledgeBases",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreateEvaluationJob",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreateEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:CreateEvaluationJob",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:CreateEvaluationJob",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:InvokeDataAutomationAsync",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeDataAutomationAsync",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeInlineAgent",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "bedrock:InlineAgentName": "${datazone:userId}"
        },
        "StringNotEquals": {
          "bedrock:InlineAgentName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeInlineAgent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "bedrock:InvokeInlineAgent",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "bedrock:InlineAgentName": "${datazone:userId}"
        },
        "StringNotEquals": {
          "bedrock:InlineAgentName": ""
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:InvokeInlineAgent",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:RetrieveAndGenerate",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:RetrieveAndGenerate",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListEvaluationJobs",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListEvaluationJobs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListEvaluationJobs",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListEvaluationJobs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "bedrock:RetrieveAndGenerate",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:RetrieveAndGenerate",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "bedrock:ListFoundationModels",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:ListFoundationModels",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "iam:PassedToService": [
            "bedrock.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:PassRole",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "iam:PassedToService": "bedrock.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:PassRole",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Tagging",
      "action": "bedrock:TagResource",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZone*",
            "AmazonBedrockManaged",
            "ProjectUserTag*"
          ]
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:TagResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "bedrock:TagResource",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonBedrockManaged",
            "AmazonDataZone*",
            "ProjectUserTag*"
          ]
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        },
        "StringEqualsIfExists": {
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "bedrock:TagResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "Null": {
          "kms:EncryptionContext:aws:bedrock:arn": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": "bedrock.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "Null": {
          "kms:EncryptionContext:aws:bedrock:arn": "false"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": "bedrock.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "ForAllValues:StringLike": {
          "kms:EncryptionContextKeys": [
            "aws:bedrock*:arn",
            "aws:bedrock:guardrail-id"
          ]
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": "bedrock.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "ForAllValues:StringLike": {
          "kms:EncryptionContextKeys": [
            "aws:bedrock*:arn",
            "aws:bedrock:guardrail-id"
          ]
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": "bedrock.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "secretsmanager:DescribeSecret",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:DescribeSecret",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "secretsmanager:PutSecretValue",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:PutSecretValue",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "secretsmanager:DescribeSecret",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:DescribeSecret",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "secretsmanager:PutSecretValue",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:PutSecretValue",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "ArnLike": {
          "kms:EncryptionContext:SecretARN": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock-ide/*"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": "secretsmanager.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "ArnLike": {
          "kms:EncryptionContext:SecretARN": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock-ide/*"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": "secretsmanager.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:Decrypt",
      "condition": {
        "ArnLike": {
          "kms:EncryptionContext:SecretARN": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock*"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": "secretsmanager.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:Decrypt",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKey",
      "condition": {
        "ArnLike": {
          "kms:EncryptionContext:SecretARN": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock*"
        },
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        },
        "StringLike": {
          "kms:ViaService": "secretsmanager.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "lambda:InvokeFunction",
      "condition": {
        "StringEquals": {
          "aws:CalledViaFirst": "bedrock.amazonaws.com",
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lambda:InvokeFunction",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "lambda:InvokeFunction",
      "condition": {
        "StringEquals": {
          "aws:CalledViaFirst": "bedrock.amazonaws.com",
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lambda:InvokeFunction",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "cloudformation:GetTemplate",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "cloudformation:GetTemplate",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "cloudformation:DescribeStacks",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "cloudformation:DescribeStacks",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "cloudformation:DescribeStacks",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "cloudformation:DescribeStacks",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "cloudformation:GetTemplate",
      "condition": {
        "StringEquals": {
          "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "cloudformation:GetTemplate",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetUserDefinedFunction",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetUserDefinedFunction",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetUserDefinedFunctions",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}",
          "glue:LakeFormationPermissions": "Enabled"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetUserDefinedFunctions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetUserDefinedFunction",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetUserDefinedFunction",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "glue:GetUserDefinedFunctions",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:GetUserDefinedFunctions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "secretsmanager:GetSecretValue",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:GetSecretValue",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:CreateLogGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:CreateLogGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:CreateLogStream",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:CreateLogStream",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "logs:PutLogEvents",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "logs:PutLogEvents",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "dynamodb:ListTables",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "dynamodb:ListTables",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:CreateNetworkInterface",
      "condition": {
        "StringEquals": {
          "ec2:Vpc": "${aws:PrincipalTag/vpcArn}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateNetworkInterface",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeSubnets",
      "condition": {
        "StringEquals": {
          "ec2:Vpc": "${aws:PrincipalTag/vpcArn}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeSubnets",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:DetachNetworkInterface",
      "condition": {
        "StringEquals": {
          "ec2:Vpc": "${aws:PrincipalTag/vpcArn}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DetachNetworkInterface",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:DeleteNetworkInterface",
      "condition": {
        "StringEqualsIfExists": {
          "ec2:Vpc": "${aws:PrincipalTag/vpcArn}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DeleteNetworkInterface",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeNetworkInterfaces",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeNetworkInterfaces",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "ecr:BatchCheckLayerAvailability",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:BatchCheckLayerAvailability",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ecr:CompleteLayerUpload",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:CompleteLayerUpload",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ecr:DeleteRepository",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:DeleteRepository",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ecr:InitiateLayerUpload",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:InitiateLayerUpload",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ecr:PutImage",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:PutImage",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ecr:BatchDeleteImage",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:BatchDeleteImage",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "ecr:ListTagsForResource",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:ListTagsForResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "ecr:DescribeRepositories",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:DescribeRepositories",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ecr:ListImages",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:ListImages",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ecr:UploadLayerPart",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:UploadLayerPart",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ecr:CreateRepository",
      "condition": {
        "StringEquals": {
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:CreateRepository",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "ecr:TagResource",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZoneProject",
            "ProjectUserTag*"
          ]
        },
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        },
        "StringEqualsIfExists": {
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:TagResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "ecr:UntagResource",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "ProjectUserTag*"
          ]
        },
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ecr:UntagResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "lakeformation:BatchGrantPermissions",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:BatchGrantPermissions",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "lakeformation:BatchRevokePermissions",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:BatchRevokePermissions",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "List",
      "action": "lakeformation:ListPermissions",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:ListPermissions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "lakeformation:DescribeResource",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:DescribeResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "ram:GetResourceShareInvitations",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:GetResourceShareInvitations",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "lakeformation:CreateDataCellsFilter",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:CreateDataCellsFilter",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "lakeformation:ListDataCellsFilter",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:ListDataCellsFilter",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "lakeformation:DeleteDataCellsFilter",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:DeleteDataCellsFilter",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "lakeformation:GetDataCellsFilter",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:GetDataCellsFilter",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "lakeformation:UpdateDataCellsFilter",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "lakeformation:UpdateDataCellsFilter",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ram:ListResources",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:ListResources",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "ram:CreateResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "lakeformation.amazonaws.com"
          ]
        },
        "StringEqualsIfExists": {
          "ram:RequestedResourceType": [
            "glue:Table",
            "glue:Database",
            "glue:Catalog"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:CreateResourceShare",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "glue:DeleteResourcePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "ram.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:DeleteResourcePolicy",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "glue:PutResourcePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "ram.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "glue:PutResourcePolicy",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "ram:AssociateResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "lakeformation.amazonaws.com"
          ]
        },
        "StringLike": {
          "ram:ResourceShareName": [
            "LakeFormation*"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:AssociateResourceShare",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "ram:DisassociateResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "lakeformation.amazonaws.com"
          ]
        },
        "StringLike": {
          "ram:ResourceShareName": [
            "LakeFormation*"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:DisassociateResourceShare",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "ram:DeleteResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "lakeformation.amazonaws.com"
          ]
        },
        "StringLike": {
          "ram:ResourceShareName": [
            "LakeFormation*"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:DeleteResourceShare",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "List",
      "action": "ram:ListResourceSharePermissions",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "lakeformation.amazonaws.com"
          ]
        },
        "StringLike": {
          "ram:ResourceShareName": [
            "LakeFormation*"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:ListResourceSharePermissions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "ram:UpdateResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "lakeformation.amazonaws.com"
          ]
        },
        "StringLike": {
          "ram:ResourceShareName": [
            "LakeFormation*"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:UpdateResourceShare",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Read",
      "action": "ram:GetResourceShares",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "lakeformation.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:GetResourceShares",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "ram:AcceptResourceShareInvitation",
      "condition": {
        "StringLike": {
          "ram:ResourceShareName": [
            "LakeFormation*",
            "DataZoneS3AG*"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:AcceptResourceShareInvitation",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Write",
      "action": "ram:AssociateResourceSharePermission",
      "condition": {
        "ArnLike": {
          "ram:PermissionArn": "arn:aws:ram::aws:permission/AWSRAMLFEnabled*"
        },
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "lakeformation.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ram:AssociateResourceSharePermission",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "scheduler:CreateSchedule",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "scheduler:CreateSchedule",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "scheduler:GetSchedule",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "scheduler:GetSchedule",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "scheduler:UpdateSchedule",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "scheduler:UpdateSchedule",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "scheduler:DeleteSchedule",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "scheduler:DeleteSchedule",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "scheduler:GetScheduleGroup",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "scheduler:GetScheduleGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "quicksight:DescribeDataSource",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:DescribeDataSource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "quicksight:DescribeFolder",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:DescribeFolder",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "quicksight:DescribeFolderPermissions",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:DescribeFolderPermissions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "quicksight:ListFolderMembers",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:ListFolderMembers",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "quicksight:DescribeDataSet",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:DescribeDataSet",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "quicksight:DescribeAccountSubscription",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:DescribeAccountSubscription",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "quicksight:DescribeUser",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:DescribeUser",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "quicksight:DescribeGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:DescribeGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "quicksight:PassDataSource",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:PassDataSource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "quicksight:CreateDataSet",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZone*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        },
        "StringEqualsIfExists": {
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:CreateDataSet",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "quicksight:TagResource",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "AmazonDataZone*"
          ]
        },
        "Null": {
          "aws:TagKeys": "false"
        },
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        },
        "StringEqualsIfExists": {
          "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:TagResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "quicksight:CreateFolderMembership",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/AmazonDataZoneAssetsFolder": "true",
          "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "quicksight:CreateFolderMembership",
      "privesc": false,
      "resource_exposure": false
    }
  ],
  "grantless": false,
  "malformed": false,
  "name": "SageMakerStudioProjectUserRolePolicy",
  "privesc": true,
  "resource_exposure": true,
  "undocumented_actions": false,
  "unknown_actions": [],
  "updatedate": "2025-09-11T17:34:06+00:00",
  "version": "v17"
}